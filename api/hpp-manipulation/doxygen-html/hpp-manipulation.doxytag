<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>axial-handle.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00044</filename>
    <includes id="a00057" name="handle.hh" local="no" imported="no">hpp/manipulation/handle.hh</includes>
    <class kind="class">hpp::manipulation::AxialHandle</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>config-optimization.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/path-optimization/</path>
    <filename>a00045</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <class kind="struct">hpp::manipulation::pathOptimization::ConfigOptimizationTraits</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::pathOptimization</namespace>
  </compound>
  <compound kind="file">
    <name>connected-component.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00046</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00049" name="graph/fwd.hh" local="no" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <class kind="class">hpp::manipulation::ConnectedComponent</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>constraint-set.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00005</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00049" name="graph/fwd.hh" local="no" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <class kind="class">hpp::manipulation::ConstraintSet</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>device.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00002</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <class kind="class">hpp::manipulation::Device</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>dot.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00047</filename>
    <class kind="struct">hpp::manipulation::graph::dot::DrawingAttributes</class>
    <class kind="struct">hpp::manipulation::graph::dot::Tooltip</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
    <namespace>hpp::manipulation::graph::dot</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>insertComments</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a88158dbb5ae7e9b30d2c87747f9a023d</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a6c930bffec5bfa6b1490e243c6de5744</anchor>
      <arglist>(std::ostream &amp;os, const DrawingAttributes &amp;da)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>edge.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00048</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00055" name="graph.hh" local="yes" imported="no">hpp/manipulation/graph/graph.hh</includes>
    <class kind="class">hpp::manipulation::graph::Cache</class>
    <class kind="class">hpp::manipulation::graph::Edge</class>
    <class kind="class">hpp::manipulation::graph::WaypointEdge</class>
    <class kind="class">hpp::manipulation::graph::LevelSetEdge</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
  </compound>
  <compound kind="file">
    <name>fwd.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00001</filename>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::pathOptimization</namespace>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Device &gt;</type>
      <name>DevicePtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ad782ecbe33604e227e8d8ffaa3614906</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Device &gt;</type>
      <name>DeviceConstPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a69f5e0fb94ffdc8334ba82cbb0d56b50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::Joint</type>
      <name>Joint</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>adfd76d64a37c6e59aa9d95f0dcf05200</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::JointPtr_t</type>
      <name>JointPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a94e9b444a71f0850deaf5f27cce8a124</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::JointConstPtr_t</type>
      <name>JointConstPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a756c0f8872bd09102d59eab2b7681b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::Transform3f</type>
      <name>Transform3f</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>af6f585b882e9733cf0d34dcbc59ad401</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::Configuration_t</type>
      <name>Configuration_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ae74e9ea4efeac19fa2174c3905aaf81c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::ConfigurationIn_t</type>
      <name>ConfigurationIn_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a07dc0a18fd3808047e49374198062aaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::ConfigurationOut_t</type>
      <name>ConfigurationOut_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a503c26e02402f7769e8a391cddc69bbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; model::Configuration_t &gt;</type>
      <name>ConfigurationPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>aba7e2b59f78904ae8093b14b97296786</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::GripperPtr_t</type>
      <name>GripperPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a4a95e108e33773d5e8bcb890f6b51151</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; AxialHandle &gt;</type>
      <name>AxialHandlePtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a0684e45fa926cbb65b9df8272bb24a8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Handle &gt;</type>
      <name>HandlePtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a92732c6c727613b61716ad124a6a9d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Object &gt;</type>
      <name>ObjectPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>abb0c5d5ccdb621475b2797eef462c4bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Object &gt;</type>
      <name>ObjectConstPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a50bc6e8ea2712047a6805e69e930e0ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ProblemSolver *</type>
      <name>ProblemSolverPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a608debc446da69af3feadf4c39f78246</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Problem *</type>
      <name>ProblemPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a745399f6356393fc73d1a2515c4cc44b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Roadmap &gt;</type>
      <name>RoadmapPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a0c28dd700f352653af9666049279d3e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RoadmapNode *</type>
      <name>RoadmapNodePtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>adaf8da46b37f1942734d58b272a952fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ConnectedComponent &gt;</type>
      <name>ConnectedComponentPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a8e9ef6a3200682acf79c032b0dd4bf1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; WeighedDistance &gt;</type>
      <name>WeighedDistancePtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a9a7b15d5a7f059a2ab41f9a933a543d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativeOrientation</type>
      <name>RelativeOrientation</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a23228c696526a79a6c6f6f0514cda71f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativePosition</type>
      <name>RelativePosition</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>aa1fe652c389244e999ea148b04ec52de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativeOrientationPtr_t</type>
      <name>RelativeOrientationPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a83d1833e1da6222d4c203ad837356e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativePositionPtr_t</type>
      <name>RelativePositionPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a81ad9eeab8f2c2632c2e52bbf7843502</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativeTransformation</type>
      <name>RelativeTransformation</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>abc2663e5c21b5802d547fdd11f53941c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativeTransformationPtr_t</type>
      <name>RelativeTransformationPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a8e62be0d61f84f3c67b5106da63db983</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::value_type</type>
      <name>value_type</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ac007ccc56320eb7b5748ad259fe4a9f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::size_type</type>
      <name>size_type</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a86f423dcee19dfc5cb8769273d2d09a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::vector_t</type>
      <name>vector_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a981b6bc4a319231c72aa078711053900</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::vectorIn_t</type>
      <name>vectorIn_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a2e9e8f926af13b5b319bca19b011dff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::vectorOut_t</type>
      <name>vectorOut_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a92c205e63302341d85a47befb66b1217</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ManipulationPlanner &gt;</type>
      <name>ManipulationPlannerPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a3180586c1bd5703bbb8d5d386215b9c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphPathValidation &gt;</type>
      <name>GraphPathValidationPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a06e1192f8e68967eb7102d1eb38efc2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphSteeringMethod &gt;</type>
      <name>GraphSteeringMethodPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>aca63475b1fea174dc09dbbe444963a20</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathOptimizer</type>
      <name>PathOptimizer</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a5636b04594dffd6bfad225b069c0c0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathOptimizerPtr_t</type>
      <name>PathOptimizerPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a5e1c635c1a0881ccbc2229d049c7f02b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphOptimizer &gt;</type>
      <name>GraphOptimizerPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ab48442b4dadade45ec31c70bd7a7f2b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphNodeOptimizer &gt;</type>
      <name>GraphNodeOptimizerPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a7e55377231d6e301b9208c5335ff62c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathProjectorPtr_t</type>
      <name>PathProjectorPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a111ec48114fff48949b1661a563ed992</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; model::DevicePtr_t &gt;</type>
      <name>Devices_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ae11a367622c7f98ade7fed0a587cdca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ObjectPtr_t &gt;</type>
      <name>Objects_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a25076831a140495234778ddf75ce8441</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; JointConstPtr_t, JointPtr_t &gt;</type>
      <name>JointMap_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a2f2fa7d5da88707b333401181ccdfcef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Constraint</type>
      <name>Constraint</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>aba6f9feb2949e5da227f8fa4aa9a7209</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConstraintPtr_t</type>
      <name>ConstraintPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>afc4cdb920936f0196fe98045485da1e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::LockedJoint</type>
      <name>LockedJoint</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>acb11a66b22d4dc255f83c0ed4a5a44a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::LockedJointPtr_t</type>
      <name>LockedJointPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a7b473b5114c7a50f9652c3a41b819a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::NumericalConstraint</type>
      <name>NumericalConstraint</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a644a28b0909469ca38c4500c861e07d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::NumericalConstraintPtr_t</type>
      <name>NumericalConstraintPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a89578b7df5c82795ff27003ae5e73e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigProjector</type>
      <name>ConfigProjector</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a1dcc36804edf6d230dc7d25e99d6ccdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigProjectorPtr_t</type>
      <name>ConfigProjectorPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a7fe50e8ceaee83f3c26bac0019fe8a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ConstraintSet &gt;</type>
      <name>ConstraintSetPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>afeac6b2dff035785fcf8901c13bfb916</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::DifferentiableFunctionPtr_t</type>
      <name>DifferentiableFunctionPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a09b7c812dd9f9d7cce1d6c705e758ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigurationShooter</type>
      <name>ConfigurationShooter</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>aedc4023cf0088c70cd97134ceb174fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigurationShooterPtr_t</type>
      <name>ConfigurationShooterPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ac43851bbd27162488b16452412e7d62b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ValidationReport</type>
      <name>ValidationReport</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a659be0f00813e134c888ac1473d8e612</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathValidationReportPtr_t</type>
      <name>PathValidationReportPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a99f3a6bb901058f0d5a131c4ec5fe6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::matrix_t</type>
      <name>matrix_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ad0909318f61ecc99e11c76cf15b7d5fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::matrixIn_t</type>
      <name>matrixIn_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a63539e7146401f235bce0818b9c5c7b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::matrixOut_t</type>
      <name>matrixOut_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a5b57fec16e81aa95544067a9d955b266</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::vector3_t</type>
      <name>vector3_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a24c129a3bd161824758d2ca4fa5d8de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; NumericalConstraintPtr_t &gt;</type>
      <name>NumericalConstraints_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a9cacffc969c8a64c6e0df0df903ab53a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; GripperPtr_t, HandlePtr_t &gt;</type>
      <name>Grasp_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a67c5d401beeaed1bcff5145efc085293</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Grasp_t &gt;</type>
      <name>GraspPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a7a34f9feb11f5bb2e3c41f6a53dd99f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; NumericalConstraintPtr_t, GraspPtr_t &gt;</type>
      <name>GraspsMap_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ad3a279f3e18a786b8e57a88361917caa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; core::vector3_t &gt;</type>
      <name>Shape_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a934372c499338274e49da83c318016cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; JointPtr_t, Shape_t &gt;</type>
      <name>JointAndShape_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a898a66f15f9c304a4448c4398b46c825</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; JointAndShape_t &gt;</type>
      <name>JointAndShapes_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a4828846d9c914bf6bb05b8c80a5a7b9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; std::string &gt;</type>
      <name>StringList_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a8cccc2c73f80a309b4eb35824c05984e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HPP_MANIPULATION_DEPRECATED Shape_t</type>
      <name>Triangle</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a3a4b09cb5230750f8ea302b4980797ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HPP_MANIPULATION_DEPRECATED JointAndShape_t</type>
      <name>JointAndTriangle_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a1784f506eeceddbc9ead32b29b5356d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HPP_MANIPULATION_DEPRECATED JointAndShapes_t</type>
      <name>JointAndTriangles_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a69ce36d45552e440af51ca30ffeb0245</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; SmallSteps &gt;</type>
      <name>SmallStepsPtr_t</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a60604613f6178214b820fa687c0b36d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>af4699e4830401075367c8905798c0c0f</anchor>
      <arglist>(Device)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a69828fdc6347a6a64ede6faefe5675fb</anchor>
      <arglist>(AxialHandle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a2501eb4647dda7ee50714bca99bd46a2</anchor>
      <arglist>(Handle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a9e798463bb2770a7606de13815f9c489</anchor>
      <arglist>(Object)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a8de0acc9a402e5584de79595d31d256f</anchor>
      <arglist>(ProblemSolver)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ab0a488840c517e5b6ec45ef7044c72c7</anchor>
      <arglist>(Problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a42f3996e834f4c74e87e3f6cce12a895</anchor>
      <arglist>(Roadmap)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a8fc81d1898468dd479a2c8d11e6ddb01</anchor>
      <arglist>(RoadmapNode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>afb1d58021ff588ec2bb9446327424ea7</anchor>
      <arglist>(ConnectedComponent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a662d5d4e06314436f51f277f86a61b0c</anchor>
      <arglist>(WeighedDistance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a6ea0b209a0e13971d352a276bfc414f8</anchor>
      <arglist>(ManipulationPlanner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ab5076cf1c1f42bea2d843d91b23b5196</anchor>
      <arglist>(GraphPathValidation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a29c03ec6f561219a696086681a24ab80</anchor>
      <arglist>(GraphSteeringMethod)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a3e1d04a56375b80dbc77768cabbe8100</anchor>
      <arglist>(GraphOptimizer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>acae5af5babe429a887c70aa30ddbe4d5</anchor>
      <arglist>(GraphNodeOptimizer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a753c71e72904db352d7dbf5bcbdc452e</anchor>
      <arglist>(ConstraintSet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a9bcb36b9db6a66f0a4ef9b7d63bd42ac</anchor>
      <arglist>(SmallSteps)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>graph/fwd.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00049</filename>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Graph &gt;</type>
      <name>GraphPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a257c3360cdfb57cbd0ef0737d83cac6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Node &gt;</type>
      <name>NodePtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a6ebe66d313d1e16d116ce13a01b00d1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Edge &gt;</type>
      <name>EdgePtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a77db730f566f1145010038dc24ccc28f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; WaypointEdge &gt;</type>
      <name>WaypointEdgePtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>ad86dfdc7bb030250836cb12e5f6535b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; LevelSetEdge &gt;</type>
      <name>LevelSetEdgePtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a1cc611aca73322cebcfd33bb268fa851</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; NodeSelector &gt;</type>
      <name>NodeSelectorPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a191baca9df5e148bd5d73ffed81c5b6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GuidedNodeSelector &gt;</type>
      <name>GuidedNodeSelectorPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a8b60a02ae9eea238dd29322f189cf68c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphComponent &gt;</type>
      <name>GraphComponentPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>ae3026579f1a2d453a718d0d9c05c66ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; NodePtr_t &gt;</type>
      <name>Nodes_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a0574ffae3e378053e8ca72f5de62f34b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; EdgePtr_t &gt;</type>
      <name>Edges_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a3d2d73780ca32e3d43a675baef077d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::hpp::statistics::DiscreteDistribution&lt; EdgePtr_t &gt;::Weight_t</type>
      <name>Weight_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a947f707f7974f48a233f1a712d2efd2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::hpp::statistics::DiscreteDistribution&lt; EdgePtr_t &gt;</type>
      <name>Neighbors_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>ad891d4c3c9017e903ec0d1a0fa4f5b17</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; NodeSelectorPtr_t &gt;</type>
      <name>NodeSelectors_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a48894cedddbeb769db212e741d647935</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::Constraint</type>
      <name>Constraint</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>aeb1c0cb9a3bae3a09de85c77d45dadfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::ConstraintPtr_t</type>
      <name>ConstraintPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>ade9188f5fea9cdbf98f62d0438b05668</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::LockedJoint</type>
      <name>LockedJoint</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a101f7545dd1fde676ddc530cf4453d2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::LockedJointPtr_t</type>
      <name>LockedJointPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a18105e39c72e4ad7cd933b7922807991</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::ConfigProjector</type>
      <name>ConfigProjector</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a271c1ffb90d415c99d0cad385b328325</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::ConfigProjectorPtr_t</type>
      <name>ConfigProjectorPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a0b892c71cc7fc018eacb60a3d1933540</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::Equality</type>
      <name>Equality</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a6838c655e43ec021ab37b6ef220d2852</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::ComparisonTypePtr_t</type>
      <name>ComparisonTypePtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a059fd5f185affd6d979ffbd4a16b6671</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::DifferentiableFunctionPtr_t</type>
      <name>DifferentiableFunctionPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a2968dc36e9e925b7bae4dc154695068c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::SizeIntervals_t</type>
      <name>SizeIntervals_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a3ccef3b9a88a31968a647e045869edbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; SizeIntervals_t &gt;</type>
      <name>IntervalsContainer_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>ae9b6f9248487756a611bf33bbc2fbf0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::NumericalConstraints_t</type>
      <name>NumericalConstraints_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a0cec6bc1d90a0442cc2b151f5d550a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::LockedJoints_t</type>
      <name>LockedJoints_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a964f21f1e2ae8ce3b0832ed2fb42f9ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Histogram &gt;</type>
      <name>HistogramPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a6fd2e0379a89f5a7210cde5e963819ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; NodeHistogram &gt;</type>
      <name>NodeHistogramPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>af09e964735fb9dd6796bc4b663f96960</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; LeafHistogram &gt;</type>
      <name>LeafHistogramPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a1f6d90fd4d05abfa738c42cf597e61d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a809fc7b720a5165b42538624f785fb55</anchor>
      <arglist>(Graph)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a20bb11dfd9af9a3ea470e138f7dd5ee9</anchor>
      <arglist>(Node)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>abbd93f93a2c484f6cb4c2f2ddef1ee6d</anchor>
      <arglist>(Edge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a1816e3003adaa327c9221f2ffb45f829</anchor>
      <arglist>(WaypointEdge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a49ba99ccaf2e8567a15d296ce0dce78a</anchor>
      <arglist>(LevelSetEdge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>ad5c62fff5424b0795e7e9b213acd5337</anchor>
      <arglist>(NodeSelector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>ac9066ba76ad50feca8f2f37ac1596616</anchor>
      <arglist>(GuidedNodeSelector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a553ef2c3a861a8628b2e6ea4e6de2527</anchor>
      <arglist>(GraphComponent)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>graph-component.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00050</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00049" name="graph/fwd.hh" local="yes" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00047" name="dot.hh" local="yes" imported="no">hpp/manipulation/graph/dot.hh</includes>
    <class kind="class">hpp::manipulation::graph::GraphComponent</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
    <member kind="function">
      <type></type>
      <name>HPP_MAKE_EXCEPTION</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>aa0601a4def88d5f7d289a439a06967db</anchor>
      <arglist>(HPP_MANIPULATION_DLLAPI, Bad_function_call)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>ga78dea138fa29161df8601cf75cdce66f</anchor>
      <arglist>(std::ostream &amp;os, const GraphComponent &amp;graphComp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>graph-node-optimizer.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00051</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00049" name="graph/fwd.hh" local="no" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00005" name="constraint-set.hh" local="no" imported="no">hpp/manipulation/constraint-set.hh</includes>
    <class kind="class">hpp::manipulation::GraphNodeOptimizer</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>graph-optimizer.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00052</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00049" name="graph/fwd.hh" local="no" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00005" name="constraint-set.hh" local="no" imported="no">hpp/manipulation/constraint-set.hh</includes>
    <class kind="class">hpp::manipulation::GraphOptimizer</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>graph-path-validation.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00053</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00055" name="graph.hh" local="yes" imported="no">hpp/manipulation/graph/graph.hh</includes>
    <includes id="a00003" name="node.hh" local="yes" imported="no">hpp/manipulation/graph/node.hh</includes>
    <class kind="class">hpp::manipulation::GraphPathValidation</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>graph-steering-method.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00054</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00049" name="graph/fwd.hh" local="yes" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00006" name="problem.hh" local="yes" imported="no">hpp/manipulation/problem.hh</includes>
    <class kind="class">hpp::manipulation::GraphSteeringMethod</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>graph.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00055</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00049" name="graph/fwd.hh" local="yes" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00050" name="graph-component.hh" local="yes" imported="no">hpp/manipulation/graph/graph-component.hh</includes>
    <class kind="class">hpp::manipulation::graph::Graph</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
  </compound>
  <compound kind="file">
    <name>guided-node-selector.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00056</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00049" name="graph/fwd.hh" local="yes" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00061" name="node-selector.hh" local="yes" imported="no">hpp/manipulation/graph/node-selector.hh</includes>
    <class kind="class">hpp::manipulation::graph::GuidedNodeSelector</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
  </compound>
  <compound kind="file">
    <name>handle.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00057</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <class kind="class">hpp::manipulation::Handle</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>aadf512ba33cbe149b0b4823dd674c4ad</anchor>
      <arglist>(std::ostream &amp;os, const Handle &amp;handle)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>helper.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00058</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00049" name="graph/fwd.hh" local="yes" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <class kind="struct">hpp::manipulation::graph::helper::NumericalConstraintsAndPassiveDofs</class>
    <class kind="struct">hpp::manipulation::graph::helper::FoliatedManifold</class>
    <class kind="struct">hpp::manipulation::graph::helper::ObjectDef_t</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
    <namespace>hpp::manipulation::graph::helper</namespace>
    <member kind="typedef">
      <type>boost::tuple&lt; NumericalConstraintPtr_t, NumericalConstraintPtr_t, LockedJoints_t &gt;</type>
      <name>PlacementConstraint_t</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga6afc11a6b568c927a90391bb9dd55488</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; HandlePtr_t &gt;</type>
      <name>Handles_t</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga55c2291d9ab4f12153077dae8139f584</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; GripperPtr_t &gt;</type>
      <name>Grippers_t</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gacb22f07ba9e56b4ac19caca53f4210b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::tuple&lt; PlacementConstraint_t, Handles_t &gt;</type>
      <name>Object_t</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga965de7e3f02fac9f609abe039b77ca28</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Object_t &gt;</type>
      <name>Objects_t</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga762238bdac56082281461e3bd90b797b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GraspingCase</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gac90bb5d288151a336e55106c7a10023f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoGrasp</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fa9c34b5fd3c9e3502bedab4d57817504f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GraspOnly</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fa51b2d0534ecf569c08cc969997990590</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WithPreGrasp</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fac13fb09f8eee1b95978decceaa88dc83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlacementCase</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gabf7d2d056c919423d6ddc30c2216a3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoPlace</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1a018c646c44b4380f51af97e5673932ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PlaceOnly</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1a3486c8460f482c55a2f68bc1ac7fc8c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WithPrePlace</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1ab4dcacb6faa315def204d72abed90ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Edges_t</type>
      <name>createEdges</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga044ed13a1957239663a0344e048958a8</anchor>
      <arglist>(const std::string &amp;forwName, const std::string &amp;backName, const NodePtr_t &amp;from, const NodePtr_t &amp;to, const size_type &amp;wForw, const size_type &amp;wBack, const FoliatedManifold &amp;grasp, const FoliatedManifold &amp;pregrasp, const FoliatedManifold &amp;place, const FoliatedManifold &amp;preplace, const bool levelSetGrasp, const bool levelSetPlace, const FoliatedManifold &amp;submanifoldDef=FoliatedManifold())</arglist>
    </member>
    <member kind="function">
      <type>EdgePtr_t</type>
      <name>createLoopEdge</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga4537715cd521ece545420556100b4b25</anchor>
      <arglist>(const std::string &amp;loopName, const NodePtr_t &amp;node, const size_type &amp;w, const bool levelSet, const FoliatedManifold &amp;submanifoldDef=FoliatedManifold())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graspManifold</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gaffa0005f5fe2ec45f29806dd0ff6e58f</anchor>
      <arglist>(const GripperPtr_t &amp;gripper, const HandlePtr_t &amp;handle, FoliatedManifold &amp;grasp, FoliatedManifold &amp;pregrasp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>strictPlacementManifold</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gaca0da4b24edb04164633c1e79b17cb4f</anchor>
      <arglist>(const NumericalConstraintPtr_t placement, const NumericalConstraintPtr_t preplacement, const NumericalConstraintPtr_t placementComplement, FoliatedManifold &amp;place, FoliatedManifold &amp;preplace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>relaxedPlacementManifold</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gaad40080ba6630b90f449a77ba7f53b12</anchor>
      <arglist>(const NumericalConstraintPtr_t placement, const NumericalConstraintPtr_t preplacement, const LockedJoints_t objectLocks, FoliatedManifold &amp;place, FoliatedManifold &amp;preplace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graphBuilder</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gabdbf8a34c9ae79b39856ac6538391b3d</anchor>
      <arglist>(const Objects_t &amp;objects, const Grippers_t &amp;grippers, GraphPtr_t graph)</arglist>
    </member>
    <member kind="function">
      <type>GraphPtr_t</type>
      <name>graphBuilder</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga2db336cf8e6102504f78c353ca51a89c</anchor>
      <arglist>(const ProblemSolverPtr_t &amp;ps, const std::string &amp;graphName, const StringList_t &amp;griNames, const std::list&lt; ObjectDef_t &gt; &amp;objs, const StringList_t &amp;envNames, const value_type &amp;prePlaceWidth=0.05)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>main.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/build/doc/</path>
    <filename>a00059</filename>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
  </compound>
  <compound kind="file">
    <name>manipulation-planner.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00060</filename>
    <includes id="a00066" name="statistics.hh" local="yes" imported="no">hpp/manipulation/graph/statistics.hh</includes>
    <includes id="a00049" name="graph/fwd.hh" local="yes" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00055" name="graph.hh" local="yes" imported="no">hpp/manipulation/graph/graph.hh</includes>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <class kind="class">hpp::manipulation::ManipulationPlanner</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>node-selector.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00061</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00055" name="graph.hh" local="yes" imported="no">hpp/manipulation/graph/graph.hh</includes>
    <includes id="a00003" name="node.hh" local="yes" imported="no">hpp/manipulation/graph/node.hh</includes>
    <class kind="class">hpp::manipulation::graph::NodeSelector</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
  </compound>
  <compound kind="file">
    <name>node.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00003</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00049" name="graph/fwd.hh" local="yes" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00048" name="edge.hh" local="yes" imported="no">hpp/manipulation/graph/edge.hh</includes>
    <includes id="a00050" name="graph-component.hh" local="yes" imported="no">hpp/manipulation/graph/graph-component.hh</includes>
    <class kind="class">hpp::manipulation::graph::Node</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
  </compound>
  <compound kind="file">
    <name>problem-solver.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00062</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00002" name="device.hh" local="yes" imported="no">hpp/manipulation/device.hh</includes>
    <includes id="a00049" name="graph/fwd.hh" local="yes" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <class kind="class">hpp::manipulation::ProblemSolver</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>problem.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00006</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00002" name="device.hh" local="yes" imported="no">hpp/manipulation/device.hh</includes>
    <includes id="a00055" name="graph.hh" local="yes" imported="no">hpp/manipulation/graph/graph.hh</includes>
    <includes id="a00053" name="graph-path-validation.hh" local="yes" imported="no">hpp/manipulation/graph-path-validation.hh</includes>
    <class kind="class">hpp::manipulation::Problem</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>roadmap-node.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00063</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00049" name="graph/fwd.hh" local="no" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00046" name="connected-component.hh" local="no" imported="no">hpp/manipulation/connected-component.hh</includes>
    <class kind="class">hpp::manipulation::RoadmapNode</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>roadmap.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00064</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00049" name="graph/fwd.hh" local="yes" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <includes id="a00066" name="statistics.hh" local="yes" imported="no">hpp/manipulation/graph/statistics.hh</includes>
    <class kind="class">hpp::manipulation::Roadmap</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="file">
    <name>small-steps.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/path-optimization/</path>
    <filename>a00065</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <class kind="class">hpp::manipulation::pathOptimization::SmallSteps</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::pathOptimization</namespace>
  </compound>
  <compound kind="file">
    <name>statistics.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/graph/</path>
    <filename>a00066</filename>
    <includes id="a00001" name="fwd.hh" local="yes" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00055" name="graph.hh" local="yes" imported="no">hpp/manipulation/graph/graph.hh</includes>
    <includes id="a00003" name="node.hh" local="yes" imported="no">hpp/manipulation/graph/node.hh</includes>
    <includes id="a00063" name="roadmap-node.hh" local="no" imported="no">hpp/manipulation/roadmap-node.hh</includes>
    <class kind="class">hpp::manipulation::graph::LeafBin</class>
    <class kind="class">hpp::manipulation::graph::NodeBin</class>
    <class kind="class">hpp::manipulation::graph::Histogram</class>
    <class kind="class">hpp::manipulation::graph::Foliation</class>
    <class kind="class">hpp::manipulation::graph::LeafHistogram</class>
    <class kind="class">hpp::manipulation::graph::NodeHistogram</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
    <namespace>hpp::manipulation::graph</namespace>
  </compound>
  <compound kind="file">
    <name>weighed-distance.hh</name>
    <path>/local/jmirabel/devel/hpp/src/hpp-manipulation/include/hpp/manipulation/</path>
    <filename>a00004</filename>
    <includes id="a00001" name="fwd.hh" local="no" imported="no">hpp/manipulation/fwd.hh</includes>
    <includes id="a00049" name="graph/fwd.hh" local="no" imported="no">hpp/manipulation/graph/fwd.hh</includes>
    <class kind="class">hpp::manipulation::WeighedDistance</class>
    <namespace>hpp</namespace>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::AxialHandle</name>
    <filename>a00007.html</filename>
    <base>hpp::manipulation::Handle</base>
    <member kind="function" virtualness="virtual">
      <type>virtual HandlePtr_t</type>
      <name>clone</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>aeee87ee5a410d5e308b600152f1a8020</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NumericalConstraintPtr_t</type>
      <name>createGrasp</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a74645d2fde6033f4d12c51fde1c507cd</anchor>
      <arglist>(const GripperPtr_t &amp;gripper) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NumericalConstraintPtr_t</type>
      <name>createGraspComplement</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>ad5e36c6925bdecd001f6194e1e1874a2</anchor>
      <arglist>(const GripperPtr_t &amp;gripper) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NumericalConstraintPtr_t</type>
      <name>createPreGrasp</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>ac6b88b2c6af6ea31d3e11aff2f2e413f</anchor>
      <arglist>(const GripperPtr_t &amp;gripper) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NumericalConstraintPtr_t</type>
      <name>createPreGraspComplement</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>ae19b30fc9ef17c75a1a330e0ddf6cece</anchor>
      <arglist>(const GripperPtr_t &amp;gripper, const value_type &amp;shift, const value_type &amp;width) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>aae3b4f4d5c12334073f414b7c943ac73</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AxialHandlePtr_t</type>
      <name>create</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a183ec9a67577223395ed9e36df1ad87c</anchor>
      <arglist>(const std::string &amp;name, const Transform3f &amp;localPosition, const JointPtr_t &amp;joint)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>AxialHandle</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a017d6ea59fc60f346a599689aeb2d8ef</anchor>
      <arglist>(const std::string &amp;name, const Transform3f &amp;localPosition, const JointPtr_t &amp;joint)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>a4cfd769c33d243e3dedc9e3c4079edc0</anchor>
      <arglist>(const AxialHandleWkPtr_t &amp;weakPtr)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AxialHandleWkPtr_t</type>
      <name>weakPtr_</name>
      <anchorfile>a00007.html</anchorfile>
      <anchor>ac676e4562cfd76561063a9b2508a7cea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::Cache</name>
    <filename>a00008.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>a66aa10a8cf772bd0b91c522ad831fb17</anchor>
      <arglist>(const C &amp;c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>a0f1c6ee98d6708f2aed23823ef1d7f64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const C &amp;</type>
      <name>get</name>
      <anchorfile>a00008.html</anchorfile>
      <anchor>aca7262ccaf359cdfac8919233dcb70bc</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::manipulation::pathOptimization::ConfigOptimizationTraits</name>
    <filename>a00009.html</filename>
    <base>hpp::core::pathOptimization::ConfigOptimizationTraits</base>
    <member kind="typedef">
      <type>core::PathPtr_t</type>
      <name>PathPtr_t</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>ad6dedbb734de438cb81a651a67278efc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_type</type>
      <name>numberOfPass</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>af25c4efacce1cf89914db5a75dabbe5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_type</type>
      <name>numberOfIterations</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>ad6fc4ce8388eaff78806e09c204ce818</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ConfigProjectorPtr_t</type>
      <name>getConfigProjector</name>
      <anchorfile>a00009.html</anchorfile>
      <anchor>ab740d352f0768a8ad3a5cee40dda0746</anchor>
      <arglist>(const PathPtr_t &amp;before, const PathPtr_t &amp;after, bool &amp;reverse)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::ConnectedComponent</name>
    <filename>a00010.html</filename>
    <base>hpp::core::ConnectedComponent</base>
    <member kind="typedef">
      <type>std::vector&lt; RoadmapNodePtr_t &gt;</type>
      <name>RoadmapNodes_t</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a088bc268470fb4a4d9e40234303cb978</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; graph::NodePtr_t, RoadmapNodes_t &gt;</type>
      <name>GraphNodes_t</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a08fa36d45dfdd411f76b40adcadfe2cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConnectedComponent</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a782380c08562bb27fc16584c65ebdf83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a2021bafa6f48cfa5fcb52a7e361c76d5</anchor>
      <arglist>(const core::ConnectedComponentPtr_t &amp;otherCC)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNode</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>aa28b13b1f447cc1f6934d5d586c7676c</anchor>
      <arglist>(const core::NodePtr_t &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>RoadmapNodes_t</type>
      <name>getRoadmapNodes</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a0dd7a01b00975fe517af83201ca4ab3a</anchor>
      <arglist>(const graph::NodePtr_t graphNode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ConnectedComponentPtr_t</type>
      <name>create</name>
      <anchorfile>a00010.html</anchorfile>
      <anchor>a97142512425088a4bbd2de4d641b3eb9</anchor>
      <arglist>(const RoadmapWkPtr_t &amp;roadmap)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::ConstraintSet</name>
    <filename>a00011.html</filename>
    <base>hpp::core::ConstraintSet</base>
    <member kind="typedef">
      <type>core::ConstraintSet</type>
      <name>Parent_t</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a078eced613319de426bd3e0e686ef483</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConstraintPtr_t</type>
      <name>copy</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a494922a36c533d8609844bbee4dd8818</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>edge</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a7e7eec606ea2f829c9737354420e605d</anchor>
      <arglist>(graph::EdgePtr_t edge)</arglist>
    </member>
    <member kind="function">
      <type>graph::EdgePtr_t</type>
      <name>edge</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>af94d5d28ae11ca0dfd1bcecdbc0255de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ConstraintSetPtr_t</type>
      <name>create</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>ae5fb4224ef17aad9b078b3f36ebe63fb</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ConstraintSetPtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a92f3d95a40ebc7b8c4186c34d881138b</anchor>
      <arglist>(const ConstraintSetPtr_t &amp;cs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ConstraintSet</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>acfa9a2b1e8d11ef64efadaeedb9f2f21</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ConstraintSet</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>a99bfc9a3df87717f68d1acd9b7c42a90</anchor>
      <arglist>(const ConstraintSet &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>aea996d54b8ec7030cd8dd76372fdc612</anchor>
      <arglist>(const ConstraintSetPtr_t &amp;self)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00011.html</anchorfile>
      <anchor>ab17c0f8890c8718316f4e2da33ecbeca</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::Device</name>
    <filename>a00012.html</filename>
    <base>hpp::model::HumanoidRobot</base>
    <base>Containers&lt; boost::mpl::vector&lt; HandlePtr_t, model::GripperPtr_t, JointAndShapes_t, model::JointVector_t &gt; &gt;</base>
    <member kind="typedef">
      <type>model::HumanoidRobot</type>
      <name>Parent_t</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a7edab2b7eea2c7c27a225ad9e1a7fa22</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Containers&lt; boost::mpl::vector&lt; HandlePtr_t, model::GripperPtr_t, JointAndShapes_t, model::JointVector_t &gt; &gt;</type>
      <name>Containers_t</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>ac86b53d0deca481bdde1de5e846c1f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>ab95c350a06c535e0bc94529f0dbbff24</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareInsertRobot</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a7ed5a258af3aaa6a59be1db9376b3f96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>didInsertRobot</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a21d28cecc3ae0d223f03462e9645653f</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DevicePtr_t</type>
      <name>create</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a1f65e5ff510c76e211d2f5cd9fe4e5c3</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Device</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>ab1fd2bc4c56098a6201d2fb33705caa4</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a1e0716036cd88472c65fe0386be9a38b</anchor>
      <arglist>(const DeviceWkPtr_t &amp;self)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareInsertRobot</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a7ed5a258af3aaa6a59be1db9376b3f96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>didInsertRobot</name>
      <anchorfile>a00012.html</anchorfile>
      <anchor>a21d28cecc3ae0d223f03462e9645653f</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::manipulation::graph::dot::DrawingAttributes</name>
    <filename>a00013.html</filename>
    <member kind="typedef">
      <type>std::pair&lt; std::string, std::string &gt;</type>
      <name>Pair</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>aa9a92d6635abce340c2f918714c34587</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>Map</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>aa2a8e859b0b57993fa397cdde6a81ab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertWithQuote</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>aa76fc207ea516fb32676891f6e692ed2</anchor>
      <arglist>(const std::string &amp;K, const std::string &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>af8e0b18601df42534fc304272d3d81e5</anchor>
      <arglist>(const std::string &amp;K, const std::string &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>operator[]</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>abc305b0dcf0c8c67b7090dd02d5b23c0</anchor>
      <arglist>(const std::string &amp;K)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DrawingAttributes</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>a44c4b5be51522572bad9d59317668ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>separator</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>a73192764040618aa641e30d0f590cf9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>openSection</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>a1337b759f4ef2e9362c48c5e31acb333</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>closeSection</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>ab118306b4157a542808da9bdd6d3247f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Map</type>
      <name>attr</name>
      <anchorfile>a00013.html</anchorfile>
      <anchor>ab7cabb3192d3637e2d466294c46f8c21</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::Edge</name>
    <filename>a00014.html</filename>
    <base>hpp::manipulation::graph::GraphComponent</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Edge</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a6b4582b2e4da2724ba9119565be32361</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyConstraints</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a3f0e717e11b72395b5258efd7a593085</anchor>
      <arglist>(core::NodePtr_t nnear, ConfigurationOut_t q) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyConstraints</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a52b5230505e49570c4517b0763a1df7d</anchor>
      <arglist>(ConfigurationIn_t qoffset, ConfigurationOut_t q) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canConnect</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>ac5b67a222b94437f5d5ca1bd6b677514</anchor>
      <arglist>(ConfigurationIn_t q1, ConfigurationIn_t q2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>build</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a30b9f2c067bd6dba622c1df36d987d12</anchor>
      <arglist>(core::PathPtr_t &amp;path, ConfigurationIn_t q1, ConfigurationIn_t q2) const </arglist>
    </member>
    <member kind="function">
      <type>NodePtr_t</type>
      <name>to</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a2ad4be35f0692d6c871dc03599bed226</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NodePtr_t</type>
      <name>from</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>aceda2998452c4a6f282f65968182f77c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NodePtr_t</type>
      <name>node</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a1d91d866ef85563ed4ec2e5154892ec9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>node</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a9903bd99fbb976f8a42d0850da57f9ac</anchor>
      <arglist>(NodePtr_t node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>isInNodeFrom</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a60b07e1cdb4b35c55dc353679db4a831</anchor>
      <arglist>(bool iinf) HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInNodeFrom</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>ac0ae54677fe095c15aca484efa9811c4</anchor>
      <arglist>() const HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function">
      <type>const core::SteeringMethodPtr_t &amp;</type>
      <name>steeringMethod</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a198ae27963e2ee152a7fd769d7a25086</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const core::PathValidationPtr_t &amp;</type>
      <name>pathValidation</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a259891832534030456b28b911184c58a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>direction</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a84fed04fde008d4d87ddbff2dc86d55d</anchor>
      <arglist>(const core::PathPtr_t &amp;path) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>intersectionConstraint</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a11c8e58a0d252ddd76eb81c80d99e97b</anchor>
      <arglist>(const EdgePtr_t &amp;other, ConfigProjectorPtr_t projector) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>dotPrint</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a066026040e0520c1c9e8001d05b60806</anchor>
      <arglist>(std::ostream &amp;os, dot::DrawingAttributes da=dot::DrawingAttributes()) const </arglist>
    </member>
    <member kind="function">
      <type>ConstraintSetPtr_t</type>
      <name>configConstraint</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>afcbe6ff60075f64e5112e8daf9428baa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShort</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>af29f04ed207730075c24c96557b3a8b3</anchor>
      <arglist>(bool isShort)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EdgePtr_t</type>
      <name>create</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>aa05ead49cd33f930511ec3310080b32a</anchor>
      <arglist>(const std::string &amp;name, const GraphWkPtr_t &amp;graph, const NodeWkPtr_t &amp;from, const NodeWkPtr_t &amp;to)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a2e72e1e91151ff7dd1410e1d0a7287d2</anchor>
      <arglist>(const EdgeWkPtr_t &amp;weak, const GraphWkPtr_t &amp;graph, const NodeWkPtr_t &amp;from, const NodeWkPtr_t &amp;to)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Edge</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a8590b47b16242269ef5286f7c53e2a07</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ConstraintSetPtr_t</type>
      <name>pathConstraint</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>afbda0beca4bc55832f6f938a3e93cf1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ConstraintSetPtr_t</type>
      <name>buildConfigConstraint</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a076a64feae084e5ee1bba7e76f111713</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ConstraintSetPtr_t</type>
      <name>buildPathConstraint</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>afe3b3d5d54fa0a9755cada8d79b9e326</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>adac3a575584b392c5cf0ab0394fc5def</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isShort_</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>a6af1f9cfbb34f640eddc9dcf6c9f9749</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Graph</name>
      <anchorfile>a00014.html</anchorfile>
      <anchor>afab89afd724f1b07b1aaad6bdc61c47a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::manipulation::graph::helper::FoliatedManifold</name>
    <filename>a00015.html</filename>
    <member kind="function">
      <type>FoliatedManifold</type>
      <name>merge</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a4a07b139fa29df2dbc2b8691236c27ae</anchor>
      <arglist>(const FoliatedManifold &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToNode</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a88bc66c7692e98acd2f639a61e3c428b</anchor>
      <arglist>(NodePtr_t comp) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToEdge</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a37cb30132708a5f038f00c8e04ce201d</anchor>
      <arglist>(EdgePtr_t comp) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>specifyFoliation</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>ae023c6838a9d89ccd57dca6d03838de1</anchor>
      <arglist>(LevelSetEdgePtr_t lse) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>foliated</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a9d3a51d41ef5a85d59291d659677486a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>af2514bab235e33bae0ae8d1881964bc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>NumericalConstraintsAndPassiveDofs</type>
      <name>nc</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a1b89c1adf3b4500638b71dcafe2ef841</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LockedJoints_t</type>
      <name>lj</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aedd498bd97a8f7782d04411897e23d0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NumericalConstraintsAndPassiveDofs</type>
      <name>nc_path</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a7a9fb8a5016a92c2efd4a9d1ac3ca0f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NumericalConstraintsAndPassiveDofs</type>
      <name>nc_fol</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>a9a2c3b86b41e131563c8861dbeadb783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LockedJoints_t</type>
      <name>lj_fol</name>
      <anchorfile>a00015.html</anchorfile>
      <anchor>aae1c32437bb60b7db776fab626005f12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::Foliation</name>
    <filename>a00016.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>a1148fec57ce0b69435337aea78517f55</anchor>
      <arglist>(ConfigurationIn_t q) const </arglist>
    </member>
    <member kind="function">
      <type>vector_t</type>
      <name>parameter</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>a5498be61110c2a6805cf65ed18333c47</anchor>
      <arglist>(ConfigurationIn_t q) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>condition</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>a4c166f406e8dcc42039016ff92f73dd9</anchor>
      <arglist>(const ConstraintSetPtr_t c)</arglist>
    </member>
    <member kind="function">
      <type>ConstraintSetPtr_t</type>
      <name>condition</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>afd662d87e361630066bdf8749f381ea7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parametrizer</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>a072e218398c94ff42909e00002c80c46</anchor>
      <arglist>(const ConstraintSetPtr_t p)</arglist>
    </member>
    <member kind="function">
      <type>ConstraintSetPtr_t</type>
      <name>parametrizer</name>
      <anchorfile>a00016.html</anchorfile>
      <anchor>a1e141a930ad1e125c75a24034aabe74d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::Graph</name>
    <filename>a00017.html</filename>
    <base>hpp::manipulation::graph::GraphComponent</base>
    <member kind="function">
      <type>NodeSelectorPtr_t</type>
      <name>createNodeSelector</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a95cd4c12df160677c30d20a39ea68198</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nodeSelector</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a5b6221fbc2c43be82a0f89d544b093af</anchor>
      <arglist>(NodeSelectorPtr_t ns)</arglist>
    </member>
    <member kind="function">
      <type>NodeSelectorPtr_t</type>
      <name>nodeSelector</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>aec130846dcc1a8af410ae23ea74e1359</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NodePtr_t</type>
      <name>getNode</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a8c775f89f19b9dd7ab8e87a2d2f7a16e</anchor>
      <arglist>(ConfigurationIn_t config) const </arglist>
    </member>
    <member kind="function">
      <type>NodePtr_t</type>
      <name>getNode</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>ac06ba59f55bc5a130b4db27dc2dd3d4b</anchor>
      <arglist>(RoadmapNodePtr_t node) const </arglist>
    </member>
    <member kind="function">
      <type>Edges_t</type>
      <name>getEdges</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a4f6dcf3f079985d72dcfdc081ee9af59</anchor>
      <arglist>(const NodePtr_t &amp;from, const NodePtr_t &amp;to) const </arglist>
    </member>
    <member kind="function">
      <type>EdgePtr_t</type>
      <name>chooseEdge</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a28d64ee136edd1b264d61ae648d159ca</anchor>
      <arglist>(RoadmapNodePtr_t node) const </arglist>
    </member>
    <member kind="function">
      <type>ConstraintSetPtr_t</type>
      <name>configConstraint</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a6e055e5502cd2334f010b9e384e177d3</anchor>
      <arglist>(const NodePtr_t &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>ConstraintSetPtr_t</type>
      <name>configConstraint</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>ac5e4d6de2d8953acab69d017e04de22f</anchor>
      <arglist>(const EdgePtr_t &amp;edge)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getConfigErrorForNode</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a80f1ba0bc9dd7a6ee312c9a98208feb3</anchor>
      <arglist>(ConfigurationIn_t config, const NodePtr_t &amp;node, vector_t &amp;error)</arglist>
    </member>
    <member kind="function">
      <type>ConstraintSetPtr_t</type>
      <name>pathConstraint</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>ad739246c33ba428b33bdbf58b817c9c8</anchor>
      <arglist>(const EdgePtr_t &amp;edge)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>maxIterations</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a8412430d426fd98410aeeded13044567</anchor>
      <arglist>(size_type iterations)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>maxIterations</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a0033a5aeab390e4532dd3bbb0b6800b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>errorThreshold</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a1871cf066a56f7b919e5d691f30982f7</anchor>
      <arglist>(const value_type &amp;threshold)</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>errorThreshold</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a3e8f8e296e68bd15d5f5666700011c73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const DevicePtr_t &amp;</type>
      <name>robot</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>af0fa6b7edefbf2e912f7fdf6a288499d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ProblemPtr_t &amp;</type>
      <name>problem</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>aa7197d55c6992454b8619bd78aa64dd9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertHistogram</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a5602b407515fdbd571c313b0741dc141</anchor>
      <arglist>(const graph::HistogramPtr_t &amp;hist)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; HistogramPtr_t &gt; &amp;</type>
      <name>histograms</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a8ea4fb0045c4b4f773f8a9f63d856983</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>dotPrint</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a385ba9d297dc65ea008f8b081d8c835c</anchor>
      <arglist>(std::ostream &amp;os, dot::DrawingAttributes da=dot::DrawingAttributes()) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphPtr_t</type>
      <name>create</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a800af9882f25664e1b33e456f2c08315</anchor>
      <arglist>(const std::string &amp;name, DevicePtr_t robot, const ProblemPtr_t &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>aee8328c7048f3355bdb0357d745886ca</anchor>
      <arglist>(const GraphWkPtr_t &amp;weak, DevicePtr_t robot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Graph</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a8253a23465bd966c99ecd5edc553f3b0</anchor>
      <arglist>(const std::string &amp;name, const ProblemPtr_t &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00017.html</anchorfile>
      <anchor>a6367fce066d165ae96afe012d0ad2247</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::GraphComponent</name>
    <filename>a00018.html</filename>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a5d2bdfdcd38b9b159659d373e46846ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>name</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a3a70a716fc0fa2de6154c31ed35cc6b5</anchor>
      <arglist>(const std::string &amp;name) HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function">
      <type>const std::size_t &amp;</type>
      <name>id</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>af407f56ed6855a39c7cd9b8607996ecf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addNumericalConstraint</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a682bddcb4c57ff5f228865fcaf015c03</anchor>
      <arglist>(const NumericalConstraintPtr_t &amp;numConstraint, const SizeIntervals_t &amp;passiveDofs=SizeIntervals_t())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addNumericalConstraint</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a1bdef431d75d63cffd6899b0ff51f7e7</anchor>
      <arglist>(const DifferentiableFunctionPtr_t &amp;function, const ComparisonTypePtr_t &amp;ineq) HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addLockedJointConstraint</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>ab0086fb0e65ac892f4725848cd0ad128</anchor>
      <arglist>(const LockedJointPtr_t &amp;constraint)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertNumericalConstraints</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a324b9b745a76b62df8c83886e88c9b01</anchor>
      <arglist>(ConfigProjectorPtr_t &amp;proj) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertLockedJoints</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>ac69c292b44abb3b00abaa98a2030dd69</anchor>
      <arglist>(ConfigProjectorPtr_t &amp;cs) const </arglist>
    </member>
    <member kind="function">
      <type>const NumericalConstraints_t &amp;</type>
      <name>numericalConstraints</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a1cf6ba63ed55804f0eb74b6664c9bef6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntervalsContainer_t &amp;</type>
      <name>passiveDofs</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a669f3be51c9181d726e231dbfaf4137a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const LockedJoints_t &amp;</type>
      <name>lockedJoints</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>aef50a1aeed6aba33f02d1b5cc92f25cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parentGraph</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>ad6742d2949cfcef0644e29e94ef0ddd9</anchor>
      <arglist>(const GraphWkPtr_t &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>GraphPtr_t</type>
      <name>parentGraph</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a444922ea4fba79a24c0a27ef5992b1c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>dotPrint</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a9b32e1df3c9b03a58bf2d5455e56ef45</anchor>
      <arglist>(std::ostream &amp;os, dot::DrawingAttributes da=dot::DrawingAttributes()) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphComponentWkPtr_t</type>
      <name>get</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a01e33e7c85bd7ce96fa734cc0ac75c92</anchor>
      <arglist>(std::size_t id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::vector&lt; GraphComponentWkPtr_t &gt; &amp;</type>
      <name>components</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a55e3722e74e22ec49b0a12f33c938b6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a27677b746f0318c020109ec24f9e3c8b</anchor>
      <arglist>(const GraphComponentWkPtr_t &amp;weak)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GraphComponent</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a66cff50d76f0c677b9eb9878e904dcdd</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a7acc4b17f1c2282d7fc18737e94b21c5</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>populateTooltip</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>ad6925c0e0fc006caaf2a05673d06badf</anchor>
      <arglist>(dot::Tooltip &amp;tp) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NumericalConstraints_t</type>
      <name>numericalConstraints_</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a84f9f1f4935552eaa6ec7c6b8d4eb884</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IntervalsContainer_t</type>
      <name>passiveDofs_</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a0ae5dfeb19fb0c029324854e2d9b08e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LockedJoints_t</type>
      <name>lockedJoints_</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a3dc5d1eee204ae60582d2d32a26d8cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GraphWkPtr_t</type>
      <name>graph_</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>a8c2fca4a984f25bc0d158a4e1ce11c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00018.html</anchorfile>
      <anchor>aaf955390a43450024b3bd4d154500af0</anchor>
      <arglist>(std::ostream &amp;, const GraphComponent &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::GraphNodeOptimizer</name>
    <filename>a00019.html</filename>
    <base>hpp::core::PathOptimizer</base>
    <member kind="function" virtualness="virtual">
      <type>virtual PathVectorPtr_t</type>
      <name>optimize</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a928b1813ed42292d2afd9f99aaf127e3</anchor>
      <arglist>(const PathVectorPtr_t &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphNodeOptimizerPtr_t</type>
      <name>create</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a0d6736d481c3847387bb2f6cf27a28a0</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GraphNodeOptimizer</name>
      <anchorfile>a00019.html</anchorfile>
      <anchor>a58a6f13ac1b3fbc9f608d73367433f43</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::GraphOptimizer</name>
    <filename>a00020.html</filename>
    <base>hpp::core::PathOptimizer</base>
    <member kind="typedef">
      <type>core::PathOptimizerBuilder_t</type>
      <name>PathOptimizerBuilder_t</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a381d6fd0abe50d01f60bf32e9e3356f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PathVectorPtr_t</type>
      <name>optimize</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>afff0aff038baabbffc84774e511148f7</anchor>
      <arglist>(const PathVectorPtr_t &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>const PathOptimizerPtr_t &amp;</type>
      <name>innerOptimizer</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a25954205610304e985567d19aac61a45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphOptimizerPtr_t</type>
      <name>create</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a619a27d479550d081d0b6bdfd6b2355e</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GraphOptimizer</name>
      <anchorfile>a00020.html</anchorfile>
      <anchor>a3a9337cf6c5bc43785f42b2a629ce31b</anchor>
      <arglist>(const core::Problem &amp;problem, PathOptimizerBuilder_t factory)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::GraphPathValidation</name>
    <filename>a00021.html</filename>
    <base>hpp::core::PathValidation</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>validate</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a3ba6e17df7f3ffcb4912b2a081f97cc0</anchor>
      <arglist>(const PathPtr_t &amp;path, bool reverse, PathPtr_t &amp;validPart, PathValidationReportPtr_t &amp;report)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>innerValidation</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a1e62742f0ac7bb9cf2ff1d8e3626da07</anchor>
      <arglist>(const PathValidationPtr_t &amp;pathValidation)</arglist>
    </member>
    <member kind="function">
      <type>const PathValidationPtr_t &amp;</type>
      <name>innerValidation</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a15d34d0c6327bfcb1382ecce24b11deb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>constraintGraph</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a2bde6aeba21641a3b75eb83a3bac336d</anchor>
      <arglist>(const graph::GraphPtr_t &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>graph::GraphPtr_t</type>
      <name>constraintGraph</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a18cc2a77202ccb5ab42f427fed147815</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addObstacle</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a7249a1755194ffee366a36148a78052d</anchor>
      <arglist>(const hpp::core::CollisionObjectPtr_t &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeObstacleFromJoint</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a438c36515e3f586dd4f87c75e63c0d72</anchor>
      <arglist>(const JointPtr_t &amp;joint, const model::CollisionObjectPtr_t &amp;obstacle)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphPathValidationPtr_t</type>
      <name>create</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a11b9111422f3319b9e9d42c8c05c5519</anchor>
      <arglist>(const PathValidationPtr_t &amp;pathValidation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphPathValidationPtr_t</type>
      <name>create</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>ga776d9be20d59a64760c0fe1ed93b54c9</anchor>
      <arglist>(const model::DevicePtr_t &amp;robot, const value_type &amp;stepSize)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GraphPathValidation</name>
      <anchorfile>a00021.html</anchorfile>
      <anchor>a28aed4e82d15a366ab69785b05865407</anchor>
      <arglist>(const PathValidationPtr_t &amp;pathValidation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::GraphSteeringMethod</name>
    <filename>a00022.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual core::SteeringMethodPtr_t</type>
      <name>copy</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a4e2ed74ed68faa53660437304c51711c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const core::SteeringMethodPtr_t &amp;</type>
      <name>innerSteeringMethod</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a18d17b0b36fa1b632106f8fc47334427</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>innerSteeringMethod</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a4496f82ac136dcb038f39f58ed347d04</anchor>
      <arglist>(const core::SteeringMethodPtr_t &amp;sm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphSteeringMethodPtr_t</type>
      <name>create</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>ae2094abc54e309b7926de7b58a8edc77</anchor>
      <arglist>(const core::ProblemPtr_t &amp;problem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphSteeringMethodPtr_t</type>
      <name>create</name>
      <anchorfile>a00079.html</anchorfile>
      <anchor>gabaa7c5d6d4a62692820886f951812ae3</anchor>
      <arglist>(const core::ProblemPtr_t &amp;problem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphSteeringMethodPtr_t</type>
      <name>create</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a76ab217cda46a3585c207d9e2d441231</anchor>
      <arglist>(const ProblemPtr_t &amp;problem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphSteeringMethodPtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>aa70e59d7dc2ed2e4bf4a6a72160ced35</anchor>
      <arglist>(const GraphSteeringMethodPtr_t &amp;other)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GraphSteeringMethod</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>aa6c4dc7b9d246b1def185580b2efe293</anchor>
      <arglist>(const ProblemPtr_t &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GraphSteeringMethod</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a7110856cc5ed1f4af542542a84f0ef57</anchor>
      <arglist>(const GraphSteeringMethod &amp;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual PathPtr_t</type>
      <name>impl_compute</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a6d3629983808db6d0632705eb471090c</anchor>
      <arglist>(ConfigurationIn_t q1, ConfigurationIn_t q2) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00022.html</anchorfile>
      <anchor>a04e35cf5292ce90241a2f4962ec72d81</anchor>
      <arglist>(GraphSteeringMethodWkPtr_t weak)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::GuidedNodeSelector</name>
    <filename>a00023.html</filename>
    <base>hpp::manipulation::graph::NodeSelector</base>
    <member kind="function">
      <type>void</type>
      <name>setNodeList</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>ac0f990974e252eb2be12f7eb7a2c3699</anchor>
      <arglist>(const Nodes_t &amp;nodeList)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EdgePtr_t</type>
      <name>chooseEdge</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a40359c85d3bd625d56df1b11cb578379</anchor>
      <arglist>(RoadmapNodePtr_t from) const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>dotPrint</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>abc7758fcba3fb8dcb36c2773fc85bf99</anchor>
      <arglist>(std::ostream &amp;os, dot::DrawingAttributes da=dot::DrawingAttributes()) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GuidedNodeSelectorPtr_t</type>
      <name>create</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>ab1253239408d41dec39fefbb792f0438</anchor>
      <arglist>(const std::string &amp;name, const core::RoadmapPtr_t &amp;roadmap)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a888170640aeca3b4a5e15d909855d1f5</anchor>
      <arglist>(const GuidedNodeSelectorPtr_t &amp;weak)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GuidedNodeSelector</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a31f339b028e77005221c2027452d6f33</anchor>
      <arglist>(const std::string &amp;name, const core::RoadmapPtr_t roadmap)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00023.html</anchorfile>
      <anchor>a80be02aefec4485a5783f6b00d36622d</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::Handle</name>
    <filename>a00024.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual HandlePtr_t</type>
      <name>clone</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>abdf248e636fbc8c6218d88711e964818</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Transform3f &amp;</type>
      <name>localPosition</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a3d24cf11101836fe4f96d37d8ad1fb39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NumericalConstraintPtr_t</type>
      <name>createGrasp</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a97b5b3671628c434f427c13312d86db7</anchor>
      <arglist>(const GripperPtr_t &amp;gripper) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NumericalConstraintPtr_t</type>
      <name>createGraspComplement</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a39e121be2f730eb84a899dcce316745a</anchor>
      <arglist>(const GripperPtr_t &amp;gripper) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NumericalConstraintPtr_t</type>
      <name>createPreGrasp</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a9e4909614dc94da0573b55eb019bbb76</anchor>
      <arglist>(const GripperPtr_t &amp;gripper, const value_type &amp;shift) const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>clearance</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a42df3d0825f7c564d12836aed67989a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearance</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a137340cabb79f3ace6e5f7d14fc55980</anchor>
      <arglist>(const value_type &amp;clearance)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a4916889801255e09619d2104c63e8feb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>name</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>abb0fa15ad91d4749fcf872ab4b5ef306</anchor>
      <arglist>(const std::string &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>const JointPtr_t &amp;</type>
      <name>joint</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a63155f90cd889eb4b13601f27e7576c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>joint</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a36fedb55d701d0a77313de46f1a65d10</anchor>
      <arglist>(const JointPtr_t &amp;joint)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static HandlePtr_t</type>
      <name>create</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a54adfffb0c40fd04c2832fca92cb8f8e</anchor>
      <arglist>(const std::string &amp;name, const Transform3f &amp;localPosition, const JointPtr_t &amp;joint)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NumericalConstraintPtr_t</type>
      <name>createGrasp</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>ad8e957eafb5248c165a3a0387b141482</anchor>
      <arglist>(const GripperPtr_t &amp;gripper, const HandlePtr_t &amp;handle)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Handle</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a582ec653f9e8fcb6f9537ba2abf5384b</anchor>
      <arglist>(const std::string &amp;name, const Transform3f &amp;localPosition, const JointPtr_t &amp;joint)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a674d359edd8c9e98d1b0b03021f14ae8</anchor>
      <arglist>(HandleWkPtr_t weakPtr)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a6af09a705b645b4a9cd833f6c61c2df5</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>af93f7a84bbdb3b4930a1efb6ab77bdcb</anchor>
      <arglist>(std::ostream &amp;, const Handle &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a4916889801255e09619d2104c63e8feb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>name</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>abb0fa15ad91d4749fcf872ab4b5ef306</anchor>
      <arglist>(const std::string &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>const JointPtr_t &amp;</type>
      <name>joint</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a63155f90cd889eb4b13601f27e7576c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>joint</name>
      <anchorfile>a00024.html</anchorfile>
      <anchor>a36fedb55d701d0a77313de46f1a65d10</anchor>
      <arglist>(const JointPtr_t &amp;joint)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::Histogram</name>
    <filename>a00025.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a00b47650ba617b060654bc2b3e040b6a</anchor>
      <arglist>(const RoadmapNodePtr_t &amp;node)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual HistogramPtr_t</type>
      <name>clone</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a9a41803fddac5a2a9dedf8310cac5ac5</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>a00025.html</anchorfile>
      <anchor>a204fa767d896c9bd7edce9f89c3229ac</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::LeafBin</name>
    <filename>a00026.html</filename>
    <base>hpp::statistics::Bin</base>
    <member kind="typedef">
      <type>::hpp::statistics::Bin</type>
      <name>Parent</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a83514cb94b0f62464441be884ad81011</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; RoadmapNodePtr_t &gt;</type>
      <name>RoadmapNodes_t</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a47a9b74d98ab99526bba4d3085748787</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LeafBin</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a0d9048625be718066e840bc834ca5d35</anchor>
      <arglist>(const vector_t &amp;v, value_type *threshold_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>aba5668d2c9c61539c34319f1e4c69806</anchor>
      <arglist>(const RoadmapNodePtr_t &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a5ff092b7801dea8926e053a16841bbf0</anchor>
      <arglist>(const LeafBin &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a970f97f750f41992b7b8e453ebb553f7</anchor>
      <arglist>(const LeafBin &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>const vector_t &amp;</type>
      <name>value</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>adf7bbc066d91f8f822adad5cd54bf2d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>a387d7aaae6c94f3dace1e39f367e70da</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>numberOfObsOutOfConnectedComponent</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>afced5249a7a534fc85e6700a5ae1c9aa</anchor>
      <arglist>(const core::ConnectedComponentPtr_t &amp;cc) const </arglist>
    </member>
    <member kind="function">
      <type>const RoadmapNodes_t &amp;</type>
      <name>nodes</name>
      <anchorfile>a00026.html</anchorfile>
      <anchor>acfda6fee32affbc5f7aae3dc10e0116b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::LeafHistogram</name>
    <filename>a00027.html</filename>
    <base>Statistics&lt; LeafBin &gt;</base>
    <base>hpp::manipulation::graph::Histogram</base>
    <member kind="typedef">
      <type>::hpp::statistics::Statistics&lt; LeafBin &gt;</type>
      <name>Parent</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a14b8265d06c78f8cdf0d27c1f666450b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>aba7484cd7fda7a22d79003c24fa6d972</anchor>
      <arglist>(const RoadmapNodePtr_t &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a2b32c2639bc17a521f25ad6e7d848501</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual HistogramPtr_t</type>
      <name>clone</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a3b69abb4f9174fe546bf2d9ecc9ce4fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>statistics::DiscreteDistribution&lt; RoadmapNodePtr_t &gt;</type>
      <name>getDistribOutOfConnectedComponent</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>ad4f80ac3b700fad2810023f0d2429788</anchor>
      <arglist>(const core::ConnectedComponentPtr_t &amp;cc) const </arglist>
    </member>
    <member kind="function">
      <type>statistics::DiscreteDistribution&lt; RoadmapNodePtr_t &gt;</type>
      <name>getDistrib</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a803c8ba2ad98a2fdddf25e13517d0d83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a0370c287d633e5b96e332bd48a43ac49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Foliation &amp;</type>
      <name>foliation</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a1ca84a7c3e2d96172fb8aca26b78d1bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LeafHistogramPtr_t</type>
      <name>create</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a63227c9aadcb50e77539ce63a86021fa</anchor>
      <arglist>(const Foliation f)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LeafHistogram</name>
      <anchorfile>a00027.html</anchorfile>
      <anchor>a9e7ccaac391ed8622534f53b1282f7a7</anchor>
      <arglist>(const Foliation f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::LevelSetEdge</name>
    <filename>a00028.html</filename>
    <base>hpp::manipulation::graph::Edge</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LevelSetEdge</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a12d49dc1de9e8aa3b88a1110cb1f62ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyConstraints</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>abae038861b5de86d5587006937c95151</anchor>
      <arglist>(ConfigurationIn_t qoffset, ConfigurationOut_t q) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyConstraints</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a8abd6a4aa3f01bac5d40819ac3a739ea</anchor>
      <arglist>(core::NodePtr_t n_offset, ConfigurationOut_t q) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConstraintSetPtr_t</type>
      <name>buildConfigConstraint</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a91a03da105788bdda7eb496283486d29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildHistogram</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>ab3a1501b583d393ab8901aa962c7edc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LeafHistogramPtr_t</type>
      <name>histogram</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a53bff8987647abb9c4612efa700e1539</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>dotPrint</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a7de60b1888fc90fc5629b1225a8d34ac</anchor>
      <arglist>(std::ostream &amp;os, dot::DrawingAttributes da=dot::DrawingAttributes()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertParamConstraint</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a9e3d7634e2b015b3c881757f69f80eba</anchor>
      <arglist>(const NumericalConstraintPtr_t &amp;nm, const SizeIntervals_t &amp;passiveDofs=SizeIntervals_t())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertParamConstraint</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a4e0be276c7d4009ea69d48ab1b5cb0dc</anchor>
      <arglist>(const DifferentiableFunctionPtr_t function, const ComparisonTypePtr_t ineq) HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertParamConstraint</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>ab44efbfd114bcb2cbbff881cf7a1d848</anchor>
      <arglist>(const LockedJointPtr_t lockedJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertConditionConstraint</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>af18019bbc904fe63c066ba14bf4fb066</anchor>
      <arglist>(const NumericalConstraintPtr_t &amp;nm, const SizeIntervals_t &amp;passiveDofs=SizeIntervals_t())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertConditionConstraint</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a327389a39c1b769bdea4c55cd0fac94d</anchor>
      <arglist>(const LockedJointPtr_t lockedJoint)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LevelSetEdgePtr_t</type>
      <name>create</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>abc3d6db93863e3fffd95a8c719705783</anchor>
      <arglist>(const std::string &amp;name, const GraphWkPtr_t &amp;graph, const NodeWkPtr_t &amp;from, const NodeWkPtr_t &amp;to)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>afe285d76dd220773ea86190c8f7fdd15</anchor>
      <arglist>(const LevelSetEdgeWkPtr_t &amp;weak, const GraphWkPtr_t &amp;graph, const NodeWkPtr_t &amp;from, const NodeWkPtr_t &amp;to)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LevelSetEdge</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a53ae261b60d0abeeb820c31a1c3835c0</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a5b1fee54925a0370d5128ec5af9c88dc</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>populateTooltip</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a89c7ed2905a024d8476e295d19d83111</anchor>
      <arglist>(dot::Tooltip &amp;tp) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertParamConstraint</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a9e3d7634e2b015b3c881757f69f80eba</anchor>
      <arglist>(const NumericalConstraintPtr_t &amp;nm, const SizeIntervals_t &amp;passiveDofs=SizeIntervals_t())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertParamConstraint</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a4e0be276c7d4009ea69d48ab1b5cb0dc</anchor>
      <arglist>(const DifferentiableFunctionPtr_t function, const ComparisonTypePtr_t ineq) HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertParamConstraint</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>ab44efbfd114bcb2cbbff881cf7a1d848</anchor>
      <arglist>(const LockedJointPtr_t lockedJoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertConditionConstraint</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>af18019bbc904fe63c066ba14bf4fb066</anchor>
      <arglist>(const NumericalConstraintPtr_t &amp;nm, const SizeIntervals_t &amp;passiveDofs=SizeIntervals_t())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertConditionConstraint</name>
      <anchorfile>a00028.html</anchorfile>
      <anchor>a327389a39c1b769bdea4c55cd0fac94d</anchor>
      <arglist>(const LockedJointPtr_t lockedJoint)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::ManipulationPlanner</name>
    <filename>a00029.html</filename>
    <base>hpp::core::PathPlanner</base>
    <member kind="typedef">
      <type>std::list&lt; std::size_t &gt;</type>
      <name>ErrorFreqs_t</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a0911cdddf3c4cf9d79d3e10a4b88cbc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>oneStep</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a4d695d06f24314127d2276c1217c4d93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>extend</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>ac4236433001133fdc6b06d6ed735d29c</anchor>
      <arglist>(RoadmapNodePtr_t q_near, const ConfigurationPtr_t &amp;q_rand, core::PathPtr_t &amp;validPath)</arglist>
    </member>
    <member kind="function">
      <type>ErrorFreqs_t</type>
      <name>getEdgeStat</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a0474df09dad59f247ed86dd952cbd344</anchor>
      <arglist>(const graph::EdgePtr_t &amp;edge) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ManipulationPlannerPtr_t</type>
      <name>create</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a7a1124e3643fcff7b6a58dd8d4478b3f</anchor>
      <arglist>(const core::Problem &amp;problem, const core::RoadmapPtr_t &amp;roadmap)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static StringList_t</type>
      <name>errorList</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a9ab3793777d8057c6a12a7495b12d36c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ManipulationPlanner</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>a08c271a3c8722f298edf1f8ebedd6ea2</anchor>
      <arglist>(const Problem &amp;problem, const RoadmapPtr_t &amp;roadmap)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00029.html</anchorfile>
      <anchor>ae957d0607f73d71d47764708ef6d02c7</anchor>
      <arglist>(const ManipulationPlannerWkPtr_t &amp;weak)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::Node</name>
    <filename>a00030.html</filename>
    <base>hpp::manipulation::graph::GraphComponent</base>
    <member kind="typedef">
      <type>boost::function&lt; EdgePtr_t(const std::string &amp;, const GraphWkPtr_t &amp;, const NodeWkPtr_t &amp;, const NodeWkPtr_t &amp;) &gt;</type>
      <name>EdgeFactory</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a56c0d3049da5546ebab32cd182ad1317</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Node</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a0502f0444993d023bf565103c2e96f1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EdgePtr_t</type>
      <name>linkTo</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a65be1e7beb7b15c5c359ab340d352fd0</anchor>
      <arglist>(const std::string &amp;name, const NodePtr_t &amp;to, const size_type &amp;w=1, EdgeFactory create=Edge::create)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>contains</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a097301c9365179938cce972ab339ce4b</anchor>
      <arglist>(ConfigurationIn_t config) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWaypoint</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>ace1480b17fbfeac2b6c75e0a8d4bdc71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>isWaypoint</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>acfde9a2fc0c8830524c4e56773ba189d</anchor>
      <arglist>(bool isWaypoint)</arglist>
    </member>
    <member kind="function">
      <type>NodeSelectorWkPtr_t</type>
      <name>nodeSelector</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a2fab8f52d965906414280d470df99109</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nodeSelector</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a7480603d20a80607a114d14b06ba889f</anchor>
      <arglist>(const NodeSelectorWkPtr_t &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>const Neighbors_t &amp;</type>
      <name>neighbors</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>adf0489d441ecb8f42dcc437b88869e4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateWeight</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a79cf709ecde523e3cdd3c216c17f7c37</anchor>
      <arglist>(const EdgePtr_t &amp;edge, const Weight_t &amp;w)</arglist>
    </member>
    <member kind="function">
      <type>ConstraintSetPtr_t</type>
      <name>configConstraint</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a84ff5b0a31b87372eb455a4b8331b7e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addNumericalConstraintForPath</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a2e7991173cb45808fb9b9587e53c899c</anchor>
      <arglist>(const NumericalConstraintPtr_t &amp;nm, const SizeIntervals_t &amp;passiveDofs=SizeIntervals_t())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addNumericalConstraintForPath</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a7d84dcab574287d8e0d3b9e28e424fbd</anchor>
      <arglist>(const DifferentiableFunctionPtr_t &amp;function, const ComparisonTypePtr_t &amp;ineq) HPP_MANIPULATION_DEPRECATED</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertNumericalConstraintsForPath</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>aa1cc1203220474ac572bddb1507a1b44</anchor>
      <arglist>(ConfigProjectorPtr_t &amp;proj) const </arglist>
    </member>
    <member kind="function">
      <type>const NumericalConstraints_t &amp;</type>
      <name>numericalConstraintsForPath</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>ac8bf977325fe1743a33fd03ffb650d63</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>dotPrint</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a21537756929e1bc48a0c91704be25b30</anchor>
      <arglist>(std::ostream &amp;os, dot::DrawingAttributes da=dot::DrawingAttributes()) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NodePtr_t</type>
      <name>create</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>ae923e38e5ca9a82f138cd36bcd21b531</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a9450e5f979a44dfe6e1dd3ad9f22cc07</anchor>
      <arglist>(const NodeWkPtr_t &amp;self)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Node</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a1ac5ea27f3c4b7390696fc2e8fffbdde</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a7252ba80849bd5b8fbb81ec6da27b8b8</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>populateTooltip</name>
      <anchorfile>a00030.html</anchorfile>
      <anchor>a210e47c0e173d659b80ff8c341001b91</anchor>
      <arglist>(dot::Tooltip &amp;tp) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::NodeBin</name>
    <filename>a00031.html</filename>
    <base>hpp::statistics::Bin</base>
    <member kind="typedef">
      <type>::hpp::statistics::Bin</type>
      <name>Parent</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>ad512ed79f65cd4ebe4d3eb02b60279d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeBin</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a30779bd282bf0c1672aa150a17c7f47c</anchor>
      <arglist>(const NodePtr_t &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>ab4627c3572d14af6cc9483ce66d32a5a</anchor>
      <arglist>(const RoadmapNodePtr_t &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a617656ee64aa25a4d23710e8af9f63ec</anchor>
      <arglist>(const NodeBin &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a42c931bdebb891ff67cb25b9ffd1b748</anchor>
      <arglist>(const NodeBin &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>const NodePtr_t &amp;</type>
      <name>node</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a30ac8e13950506c9eb25385c2b5aed7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00031.html</anchorfile>
      <anchor>a5e9614bcb671ee6a126b7e5f801d4fa2</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::NodeHistogram</name>
    <filename>a00032.html</filename>
    <base>Statistics&lt; NodeBin &gt;</base>
    <base>hpp::manipulation::graph::Histogram</base>
    <member kind="typedef">
      <type>::hpp::statistics::Statistics&lt; NodeBin &gt;</type>
      <name>Parent</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a9dae27844e586d260d3fa11db058c325</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeHistogram</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a671b65758620b1ace35a6b0acc27913b</anchor>
      <arglist>(const graph::GraphPtr_t &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a28c7a0a8ae471fd73760a65eb5591293</anchor>
      <arglist>(const RoadmapNodePtr_t &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>a3e32e084da58f0cc7d6dd3f9ecc09853</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>const graph::GraphPtr_t &amp;</type>
      <name>constraintGraph</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>ad4544488e808fddd4360eb8ff8ab7a79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual HistogramPtr_t</type>
      <name>clone</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>adf73df41dca572c28605a309ad4f4107</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>a00032.html</anchorfile>
      <anchor>aeb1e04eeb706f9515bb0e55ddc9f83fd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::NodeSelector</name>
    <filename>a00033.html</filename>
    <base>hpp::manipulation::graph::GraphComponent</base>
    <member kind="function">
      <type>NodePtr_t</type>
      <name>createNode</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a5cb5f733e2e5ede336ea054553ce4c60</anchor>
      <arglist>(const std::string &amp;name, bool waypoint=false, const int w=0)</arglist>
    </member>
    <member kind="function">
      <type>NodePtr_t</type>
      <name>getNode</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a9b98318bba96e1abad6560cccab69aec</anchor>
      <arglist>(ConfigurationIn_t config) const </arglist>
    </member>
    <member kind="function">
      <type>NodePtr_t</type>
      <name>getNode</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a2949f260d05214aeae4088bb2ea18a92</anchor>
      <arglist>(RoadmapNodePtr_t node) const </arglist>
    </member>
    <member kind="function">
      <type>Nodes_t</type>
      <name>getNodes</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>af39d3e1254abee705d9488c59b32c1b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EdgePtr_t</type>
      <name>chooseEdge</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a560cb361af15d80a9f99a663ef7469fb</anchor>
      <arglist>(RoadmapNodePtr_t from) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNumericalConstraint</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a372b2b6aeb710ad638b07d902fdb80d7</anchor>
      <arglist>(const core::NumericalConstraintPtr_t &amp;, const SizeIntervals_t &amp;=SizeIntervals_t())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLockedJointConstraint</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a87e9fa5f0d87db03ea01386aee442a8f</anchor>
      <arglist>(const core::LockedJoint &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>dotPrint</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>ac5a81f8e6c2119b74d211f0e179a63ec</anchor>
      <arglist>(std::ostream &amp;os, dot::DrawingAttributes da=dot::DrawingAttributes()) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NodeSelectorPtr_t</type>
      <name>create</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a5c59a86612091cb59b5e91a6011e281a</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::pair&lt; int, NodePtr_t &gt;</type>
      <name>WeighedNode_t</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a1c71e3c1be845fd1dd1b859b0f26dc87</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::list&lt; WeighedNode_t &gt;</type>
      <name>WeighedNodes_t</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a44e9a52ae045c2d8f819f2379ccab919</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>ac96460a5cab95c25f71b181bdb2bd98d</anchor>
      <arglist>(const NodeSelectorPtr_t &amp;weak)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NodeSelector</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a816c7d5ea4ec56435f3c34e1a89bb3b3</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>aa6633e05d0fcf61e1ab902037dc37082</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WeighedNodes_t</type>
      <name>orderedStates_</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a946f7bb545523c96100e2679f8402335</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Nodes_t</type>
      <name>waypoints_</name>
      <anchorfile>a00033.html</anchorfile>
      <anchor>a9c77113c2b827ad1a3d5747b74b51664</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::manipulation::graph::helper::NumericalConstraintsAndPassiveDofs</name>
    <filename>a00034.html</filename>
    <member kind="function">
      <type>NumericalConstraintsAndPassiveDofs</type>
      <name>merge</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a2bfe4edcdd3f12e336ca54a55579bae6</anchor>
      <arglist>(const NumericalConstraintsAndPassiveDofs &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToComp</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a9e7fb8467bab2b1ce5cc395cfdb90ec7</anchor>
      <arglist>(GraphComponentPtr_t comp) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>specifyFoliation</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>abeceba700deb75c6de7685b85fd81b8c</anchor>
      <arglist>(LevelSetEdgePtr_t lse) const </arglist>
    </member>
    <member kind="variable">
      <type>NumericalConstraints_t</type>
      <name>nc</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a7119a1955003ac409c37e0539fafb50b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IntervalsContainer_t</type>
      <name>pdof</name>
      <anchorfile>a00034.html</anchorfile>
      <anchor>a32f302a567f6e297a3702d338c9eaa8f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::manipulation::graph::helper::ObjectDef_t</name>
    <filename>a00035.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>a32006df23526d74ac4eeb2481edcf74d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StringList_t</type>
      <name>handles</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>aa9ed2c28f383a98f05671e57fecac0f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StringList_t</type>
      <name>shapes</name>
      <anchorfile>a00035.html</anchorfile>
      <anchor>aa51e3ace425a877f80971df5d93962c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::Problem</name>
    <filename>a00036.html</filename>
    <base>hpp::core::Problem</base>
    <member kind="typedef">
      <type>core::Problem</type>
      <name>Parent</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>abf0562f074347e9edee4722c06b2b233</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Problem</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a5fa00ba1c5b29aff8c9c8b3338710fcb</anchor>
      <arglist>(DevicePtr_t robot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>constraintGraph</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a5917e233457c37391720f844b71559c8</anchor>
      <arglist>(const graph::GraphPtr_t &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>graph::GraphPtr_t</type>
      <name>constraintGraph</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a7d02f53811676ee3d561f882b536f09b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>checkProblem</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>ab443477c6c41778e3f0ebf622595bbac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GraphPathValidationPtr_t</type>
      <name>pathValidation</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>ada388e3ce65cddf74ca2b8c5abd3f51a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pathValidation</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>ab1d0f8eda4825a79b54af0f701ec1b9b</anchor>
      <arglist>(const PathValidationPtr_t &amp;pathValidation)</arglist>
    </member>
    <member kind="function">
      <type>GraphSteeringMethodPtr_t</type>
      <name>steeringMethod</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a030fdd111a9ee75b2744f902f264ad4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PathValidationPtr_t</type>
      <name>pathValidationFactory</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a2d23ae4180330441f0d973658d9f27b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPathValidationFactory</name>
      <anchorfile>a00036.html</anchorfile>
      <anchor>a7bdbe598677daa7ecc2de2851fadc61e</anchor>
      <arglist>(const core::PathValidationBuilder_t &amp;factory, const value_type &amp;tol)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::ProblemSolver</name>
    <filename>a00037.html</filename>
    <base>hpp::core::ProblemSolver</base>
    <base>Containers&lt; boost::mpl::vector&lt; LockedJointPtr_t, JointAndShapes_t &gt; &gt;</base>
    <member kind="typedef">
      <type>core::Containers&lt; boost::mpl::vector&lt; LockedJointPtr_t, JointAndShapes_t &gt; &gt;</type>
      <name>ThisC_t</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a3c003d97e48504a375e533609a8d0af4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ProblemSolver</type>
      <name>parent_t</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a3ea543ce7576c211ce808ac0caf82269</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;</type>
      <name>Names_t</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a37d61097868fcc695c42e0652c839993</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProblemSolver</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>abdc936250ef45d9fd9760ef8d4161cd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProblemSolver</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>aab7337ae83fa8beacca4f1354b0aa090</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>robot</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a12e2813e54bb61a161fbcdc0efd20108</anchor>
      <arglist>(const DevicePtr_t &amp;robot)</arglist>
    </member>
    <member kind="function">
      <type>const DevicePtr_t &amp;</type>
      <name>robot</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>aefc0afa71a55f998d076e593d3e09898</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addGrasp</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a6ca32d0d728ebe1bc10fe312daa1a170</anchor>
      <arglist>(const NumericalConstraintPtr_t &amp;constraint, const model::GripperPtr_t &amp;gripper, const HandlePtr_t &amp;handle)</arglist>
    </member>
    <member kind="function">
      <type>GraspsMap_t &amp;</type>
      <name>grasps</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>abac807ebc0790c29964c4c5d03b5bcea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GraspPtr_t</type>
      <name>grasp</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>add2532589051ad2a26fd89ab9fec3069</anchor>
      <arglist>(const NumericalConstraintPtr_t &amp;constraint) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createPlacementConstraint</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a4eb8033c2fbc7fa0517319927a4e609a</anchor>
      <arglist>(const std::string &amp;name, const StringList_t &amp;surface1, const StringList_t &amp;surface2, const value_type &amp;margin=1e-4)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createPrePlacementConstraint</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a2c1bb1907e10499d3de3c0fa35892b85</anchor>
      <arglist>(const std::string &amp;name, const StringList_t &amp;surface1, const StringList_t &amp;surface2, const value_type &amp;width, const value_type &amp;margin=1e-4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetConstraints</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>afcd0c1b2cf9b06548e26df8d7a51107e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addFunctionToConfigProjector</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a880a53f401b2032c45e4179a2b9bd613</anchor>
      <arglist>(const std::string &amp;constraintName, const std::string &amp;functionName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pathValidationType</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>adc7709e196eaf2384c224164ef90e8d3</anchor>
      <arglist>(const std::string &amp;type, const value_type &amp;tolerance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetProblem</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a366e896cf9765f7b93b1bc3814fa8eca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetRoadmap</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a3455bd10d95a75709c0af648cf0e0ef9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProblemPtr_t</type>
      <name>problem</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>ab604990db5a8e985a8714394267433ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>constraintGraph</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a6bb54feb1e10bf437d7f9b7074fe1518</anchor>
      <arglist>(const graph::GraphPtr_t &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>graph::GraphPtr_t</type>
      <name>constraintGraph</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a941b2081aaa3ccf185e35244006a8980</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ProblemSolverPtr_t</type>
      <name>create</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>afcb6d4d0b7778be7e7bfa66ec74ed316</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeProblem</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a2c9256e8d6ed5901ac0134a4f1fc9345</anchor>
      <arglist>(ProblemPtr_t problem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>constraintGraph</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a6bb54feb1e10bf437d7f9b7074fe1518</anchor>
      <arglist>(const graph::GraphPtr_t &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>graph::GraphPtr_t</type>
      <name>constraintGraph</name>
      <anchorfile>a00037.html</anchorfile>
      <anchor>a941b2081aaa3ccf185e35244006a8980</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::Roadmap</name>
    <filename>a00038.html</filename>
    <base>hpp::core::Roadmap</base>
    <member kind="typedef">
      <type>core::Roadmap</type>
      <name>Parent</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a0ff87d00a45e700f78718cb827c4491b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertHistogram</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ab851a4cf0b759dacd80a157d44bad4e4</anchor>
      <arglist>(const graph::HistogramPtr_t hist)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>constraintGraph</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a3e90972b8f415e37c5357536ea6e82eb</anchor>
      <arglist>(const graph::GraphPtr_t &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>afdf0ab6cb8862e361901d975147046ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_node</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>ae8177585fca28cb6e0e6ce4ca64250bf</anchor>
      <arglist>(const core::NodePtr_t &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>RoadmapNodePtr_t</type>
      <name>nearestNode</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a2a12359a1dea481132a28d552907e20f</anchor>
      <arglist>(const ConfigurationPtr_t &amp;configuration, const ConnectedComponentPtr_t &amp;connectedComponent, const graph::NodePtr_t &amp;node, value_type &amp;minDistance) const </arglist>
    </member>
    <member kind="function">
      <type>graph::NodePtr_t</type>
      <name>getNode</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a44a9fbc85004c8c50dcd641e48b77bcb</anchor>
      <arglist>(RoadmapNodePtr_t node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RoadmapPtr_t</type>
      <name>create</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>af428a6a6e557cbd8752ec4cb0649e3e2</anchor>
      <arglist>(const core::DistancePtr_t &amp;distance, const core::DevicePtr_t &amp;robot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>statInsert</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a84dfc62ab7274726edef9b1635cc9758</anchor>
      <arglist>(const RoadmapNodePtr_t &amp;n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Roadmap</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a3b4b960c1e465ff3b02332d927014e56</anchor>
      <arglist>(const core::DistancePtr_t &amp;distance, const core::DevicePtr_t &amp;robot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>core::NodePtr_t</type>
      <name>createNode</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>a612161cf33cca8cd04dab5ef2de693b7</anchor>
      <arglist>(const ConfigurationPtr_t &amp;config) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00038.html</anchorfile>
      <anchor>aefd9d6355ef08e28189d6e572664f542</anchor>
      <arglist>(const RoadmapPtr_t &amp;shPtr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::RoadmapNode</name>
    <filename>a00039.html</filename>
    <base>hpp::core::Node</base>
    <member kind="enumvalue">
      <name>CACHE_DISABLED</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>aa31dc3b26669bd3ff5c810a07e8ef892aca34c188eb2bd4add70d87c0c497050b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CACHE_UP_TO_DATE</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>aa31dc3b26669bd3ff5c810a07e8ef892ab5e44abceb6b86685d599b688eb72d86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CACHE_NEED_UPDATE</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>aa31dc3b26669bd3ff5c810a07e8ef892abd691b7189eb70d13b0371f661920405</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RoadmapNode</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>a51b71cde2a1b3d9f3fb76d940319dc2f</anchor>
      <arglist>(const ConfigurationPtr_t &amp;configuration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RoadmapNode</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>ad6b21d32d47fdaf9bfce8456dbb312ab</anchor>
      <arglist>(const ConfigurationPtr_t &amp;configuration, ConnectedComponentPtr_t cc)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CachingSystem</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>aa31dc3b26669bd3ff5c810a07e8ef892</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CACHE_DISABLED</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>aa31dc3b26669bd3ff5c810a07e8ef892aca34c188eb2bd4add70d87c0c497050b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CACHE_UP_TO_DATE</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>aa31dc3b26669bd3ff5c810a07e8ef892ab5e44abceb6b86685d599b688eb72d86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CACHE_NEED_UPDATE</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>aa31dc3b26669bd3ff5c810a07e8ef892abd691b7189eb70d13b0371f661920405</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static CachingSystem</type>
      <name>defaultCachingSystem</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>a845bb4f0fbc96d68eb56b0e2325b95cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>CachingSystem</type>
      <name>cachingSystem</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>a9626013b903e649323dba597beae6a99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>graph::NodePtr_t</type>
      <name>graphNode</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>a9312dcb869171f28373c4ed67023b333</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graphNode</name>
      <anchorfile>a00039.html</anchorfile>
      <anchor>a365fc7682ff69c076a0ca96fbbff55b1</anchor>
      <arglist>(const graph::NodePtr_t &amp;node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::pathOptimization::SmallSteps</name>
    <filename>a00040.html</filename>
    <base>hpp::core::PathOptimizer</base>
    <member kind="function">
      <type>PathVectorPtr_t</type>
      <name>optimize</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a57bf3955078ec94c065124bf5af147be</anchor>
      <arglist>(const PathVectorPtr_t &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SmallStepsPtr_t</type>
      <name>create</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a89220c0d2fa36ddaaacc17f0214092c7</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SmallSteps</name>
      <anchorfile>a00040.html</anchorfile>
      <anchor>a005e70360e7fee254244cfebc06dc81d</anchor>
      <arglist>(const core::Problem &amp;problem)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>hpp::manipulation::graph::dot::Tooltip</name>
    <filename>a00041.html</filename>
    <member kind="typedef">
      <type>std::list&lt; std::string &gt;</type>
      <name>TooltipLineVector</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>ad2d2ec7dc54bdca166b3b73ded92a5e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tooltip</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>ab4844fe2954b42007b69b29a90f51606</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toStr</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a3772baf8f42789c8eecd62b29e75f9ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLine</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a31cad46fb447eab3e4cfbe2a9134e7a6</anchor>
      <arglist>(const std::string &amp;l)</arglist>
    </member>
    <member kind="variable">
      <type>TooltipLineVector</type>
      <name>v</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>a2f37df2cdaf58ad544460dd66cd9aef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>tooltipendl</name>
      <anchorfile>a00041.html</anchorfile>
      <anchor>acb56b7c65b494ec62c5fb8ce369c0102</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::graph::WaypointEdge</name>
    <filename>a00042.html</filename>
    <base>hpp::manipulation::graph::Edge</base>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>direction</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>add20b2296f8457e73fec503f378ce6d7</anchor>
      <arglist>(const core::PathPtr_t &amp;path) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canConnect</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>afa01c62a6a73071b04a1745ad7110588</anchor>
      <arglist>(ConfigurationIn_t q1, ConfigurationIn_t q2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>build</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>ac752dc1f7fc023d9d42ff2ec0765efe8</anchor>
      <arglist>(core::PathPtr_t &amp;path, ConfigurationIn_t q1, ConfigurationIn_t q2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyConstraints</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>af41961fc5b598054f7ab5903b71a6bf1</anchor>
      <arglist>(ConfigurationIn_t qoffset, ConfigurationOut_t q) const </arglist>
    </member>
    <member kind="function">
      <type>boost::shared_ptr&lt; EdgeType &gt;</type>
      <name>waypoint</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a336aa31234d5504247b2b88d1b24f678</anchor>
      <arglist>(const std::size_t index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>dotPrint</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a01b2c2660ae70e39eb7dd7f979f96da3</anchor>
      <arglist>(std::ostream &amp;os, dot::DrawingAttributes da=dot::DrawingAttributes()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nbWaypoints</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a426fe9704fd03e6f5d4ca837b1710725</anchor>
      <arglist>(const size_type number)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>nbWaypoints</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a5bbdaa43f45318f86e96c0e6d1c141ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaypoint</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a9c8c808bceadfed68960e361856dcba3</anchor>
      <arglist>(const std::size_t index, const EdgePtr_t wEdge, const NodePtr_t wTo)</arglist>
    </member>
    <member kind="function">
      <type>NodePtr_t</type>
      <name>node</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a8f3ba6c6211525488bb3249618419c44</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WaypointEdgePtr_t</type>
      <name>create</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a66b8a566d465390013a7a7f52a8ea0b1</anchor>
      <arglist>(const std::string &amp;name, const GraphWkPtr_t &amp;graph, const NodeWkPtr_t &amp;from, const NodeWkPtr_t &amp;to)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WaypointEdge</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a6a71e1a18114f5a7210f42b970bc37a5</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a190a74473bfd4dca108912aee3b727c9</anchor>
      <arglist>(const WaypointEdgeWkPtr_t &amp;weak, const GraphWkPtr_t &amp;graph, const NodeWkPtr_t &amp;from, const NodeWkPtr_t &amp;to)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>a00042.html</anchorfile>
      <anchor>a46f933540867bebb7536f1add959bf2e</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hpp::manipulation::WeighedDistance</name>
    <filename>a00043.html</filename>
    <base>hpp::core::WeighedDistance</base>
    <member kind="function" virtualness="virtual">
      <type>virtual core::DistancePtr_t</type>
      <name>clone</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a5822cf3fdb6fc85deaf23a99f16094c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>constraintGraph</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a7031b24a4aab9ed25b9892a35e6ff540</anchor>
      <arglist>(const graph::GraphPtr_t &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>graph::GraphPtr_t</type>
      <name>constraintGraph</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a6d09fb37b80ced9e6d8f2842ab173d71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WeighedDistancePtr_t</type>
      <name>create</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a472d37430ce60fee5ede526a89b473df</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const graph::GraphPtr_t &amp;graph)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WeighedDistancePtr_t</type>
      <name>createCopy</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>aac7b677b91f2e0b124afe860bbaeda07</anchor>
      <arglist>(const WeighedDistancePtr_t &amp;distance)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WeighedDistance</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a7bfbc254b363fd28473008f3d20a0e6a</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const graph::GraphPtr_t graph)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WeighedDistance</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>afbf52a0da1becaefb8332dbc525edb91</anchor>
      <arglist>(const WeighedDistance &amp;distance)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual value_type</type>
      <name>impl_distance</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a41054ea700a63e7780fed7e7cd518ad4</anchor>
      <arglist>(ConfigurationIn_t q1, ConfigurationIn_t q2) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual value_type</type>
      <name>impl_distance</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>a480788fefcfbf236241b53afa907d4fc</anchor>
      <arglist>(core::NodePtr_t n1, core::NodePtr_t n2) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>a00043.html</anchorfile>
      <anchor>abc070e16d1e96d5d1002da5787556a0f</anchor>
      <arglist>(WeighedDistanceWkPtr_t self)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp</name>
    <filename>a00067.html</filename>
    <namespace>hpp::manipulation</namespace>
  </compound>
  <compound kind="namespace">
    <name>hpp::manipulation</name>
    <filename>a00068.html</filename>
    <namespace>hpp::manipulation::graph</namespace>
    <namespace>hpp::manipulation::pathOptimization</namespace>
    <class kind="class">hpp::manipulation::AxialHandle</class>
    <class kind="class">hpp::manipulation::ConnectedComponent</class>
    <class kind="class">hpp::manipulation::ConstraintSet</class>
    <class kind="class">hpp::manipulation::Device</class>
    <class kind="class">hpp::manipulation::GraphNodeOptimizer</class>
    <class kind="class">hpp::manipulation::GraphOptimizer</class>
    <class kind="class">hpp::manipulation::GraphPathValidation</class>
    <class kind="class">hpp::manipulation::GraphSteeringMethod</class>
    <class kind="class">hpp::manipulation::Handle</class>
    <class kind="class">hpp::manipulation::ManipulationPlanner</class>
    <class kind="class">hpp::manipulation::Problem</class>
    <class kind="class">hpp::manipulation::ProblemSolver</class>
    <class kind="class">hpp::manipulation::Roadmap</class>
    <class kind="class">hpp::manipulation::RoadmapNode</class>
    <class kind="class">hpp::manipulation::WeighedDistance</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Device &gt;</type>
      <name>DevicePtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ad782ecbe33604e227e8d8ffaa3614906</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Device &gt;</type>
      <name>DeviceConstPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a69f5e0fb94ffdc8334ba82cbb0d56b50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::Joint</type>
      <name>Joint</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>adfd76d64a37c6e59aa9d95f0dcf05200</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::JointPtr_t</type>
      <name>JointPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a94e9b444a71f0850deaf5f27cce8a124</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::JointConstPtr_t</type>
      <name>JointConstPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a756c0f8872bd09102d59eab2b7681b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::Transform3f</type>
      <name>Transform3f</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>af6f585b882e9733cf0d34dcbc59ad401</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::Configuration_t</type>
      <name>Configuration_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ae74e9ea4efeac19fa2174c3905aaf81c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::ConfigurationIn_t</type>
      <name>ConfigurationIn_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a07dc0a18fd3808047e49374198062aaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::ConfigurationOut_t</type>
      <name>ConfigurationOut_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a503c26e02402f7769e8a391cddc69bbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; model::Configuration_t &gt;</type>
      <name>ConfigurationPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>aba7e2b59f78904ae8093b14b97296786</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::GripperPtr_t</type>
      <name>GripperPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a4a95e108e33773d5e8bcb890f6b51151</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; AxialHandle &gt;</type>
      <name>AxialHandlePtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a0684e45fa926cbb65b9df8272bb24a8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Handle &gt;</type>
      <name>HandlePtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a92732c6c727613b61716ad124a6a9d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Object &gt;</type>
      <name>ObjectPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>abb0c5d5ccdb621475b2797eef462c4bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; const Object &gt;</type>
      <name>ObjectConstPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a50bc6e8ea2712047a6805e69e930e0ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ProblemSolver *</type>
      <name>ProblemSolverPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a608debc446da69af3feadf4c39f78246</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Problem *</type>
      <name>ProblemPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a745399f6356393fc73d1a2515c4cc44b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Roadmap &gt;</type>
      <name>RoadmapPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a0c28dd700f352653af9666049279d3e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RoadmapNode *</type>
      <name>RoadmapNodePtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>adaf8da46b37f1942734d58b272a952fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ConnectedComponent &gt;</type>
      <name>ConnectedComponentPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a8e9ef6a3200682acf79c032b0dd4bf1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; WeighedDistance &gt;</type>
      <name>WeighedDistancePtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a9a7b15d5a7f059a2ab41f9a933a543d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativeOrientation</type>
      <name>RelativeOrientation</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a23228c696526a79a6c6f6f0514cda71f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativePosition</type>
      <name>RelativePosition</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>aa1fe652c389244e999ea148b04ec52de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativeOrientationPtr_t</type>
      <name>RelativeOrientationPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a83d1833e1da6222d4c203ad837356e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativePositionPtr_t</type>
      <name>RelativePositionPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a81ad9eeab8f2c2632c2e52bbf7843502</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativeTransformation</type>
      <name>RelativeTransformation</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>abc2663e5c21b5802d547fdd11f53941c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>constraints::RelativeTransformationPtr_t</type>
      <name>RelativeTransformationPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a8e62be0d61f84f3c67b5106da63db983</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::value_type</type>
      <name>value_type</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ac007ccc56320eb7b5748ad259fe4a9f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::size_type</type>
      <name>size_type</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a86f423dcee19dfc5cb8769273d2d09a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::vector_t</type>
      <name>vector_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a981b6bc4a319231c72aa078711053900</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::vectorIn_t</type>
      <name>vectorIn_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a2e9e8f926af13b5b319bca19b011dff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>model::vectorOut_t</type>
      <name>vectorOut_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a92c205e63302341d85a47befb66b1217</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ManipulationPlanner &gt;</type>
      <name>ManipulationPlannerPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a3180586c1bd5703bbb8d5d386215b9c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphPathValidation &gt;</type>
      <name>GraphPathValidationPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a06e1192f8e68967eb7102d1eb38efc2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphSteeringMethod &gt;</type>
      <name>GraphSteeringMethodPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>aca63475b1fea174dc09dbbe444963a20</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathOptimizer</type>
      <name>PathOptimizer</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a5636b04594dffd6bfad225b069c0c0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathOptimizerPtr_t</type>
      <name>PathOptimizerPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a5e1c635c1a0881ccbc2229d049c7f02b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphOptimizer &gt;</type>
      <name>GraphOptimizerPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ab48442b4dadade45ec31c70bd7a7f2b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphNodeOptimizer &gt;</type>
      <name>GraphNodeOptimizerPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a7e55377231d6e301b9208c5335ff62c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathProjectorPtr_t</type>
      <name>PathProjectorPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a111ec48114fff48949b1661a563ed992</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; model::DevicePtr_t &gt;</type>
      <name>Devices_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ae11a367622c7f98ade7fed0a587cdca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ObjectPtr_t &gt;</type>
      <name>Objects_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a25076831a140495234778ddf75ce8441</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; JointConstPtr_t, JointPtr_t &gt;</type>
      <name>JointMap_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a2f2fa7d5da88707b333401181ccdfcef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::Constraint</type>
      <name>Constraint</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>aba6f9feb2949e5da227f8fa4aa9a7209</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConstraintPtr_t</type>
      <name>ConstraintPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>afc4cdb920936f0196fe98045485da1e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::LockedJoint</type>
      <name>LockedJoint</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>acb11a66b22d4dc255f83c0ed4a5a44a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::LockedJointPtr_t</type>
      <name>LockedJointPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a7b473b5114c7a50f9652c3a41b819a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::NumericalConstraint</type>
      <name>NumericalConstraint</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a644a28b0909469ca38c4500c861e07d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::NumericalConstraintPtr_t</type>
      <name>NumericalConstraintPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a89578b7df5c82795ff27003ae5e73e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigProjector</type>
      <name>ConfigProjector</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a1dcc36804edf6d230dc7d25e99d6ccdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigProjectorPtr_t</type>
      <name>ConfigProjectorPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a7fe50e8ceaee83f3c26bac0019fe8a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; ConstraintSet &gt;</type>
      <name>ConstraintSetPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>afeac6b2dff035785fcf8901c13bfb916</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::DifferentiableFunctionPtr_t</type>
      <name>DifferentiableFunctionPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a09b7c812dd9f9d7cce1d6c705e758ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigurationShooter</type>
      <name>ConfigurationShooter</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>aedc4023cf0088c70cd97134ceb174fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ConfigurationShooterPtr_t</type>
      <name>ConfigurationShooterPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ac43851bbd27162488b16452412e7d62b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::ValidationReport</type>
      <name>ValidationReport</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a659be0f00813e134c888ac1473d8e612</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::PathValidationReportPtr_t</type>
      <name>PathValidationReportPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a99f3a6bb901058f0d5a131c4ec5fe6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::matrix_t</type>
      <name>matrix_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ad0909318f61ecc99e11c76cf15b7d5fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::matrixIn_t</type>
      <name>matrixIn_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a63539e7146401f235bce0818b9c5c7b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::matrixOut_t</type>
      <name>matrixOut_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a5b57fec16e81aa95544067a9d955b266</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>core::vector3_t</type>
      <name>vector3_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a24c129a3bd161824758d2ca4fa5d8de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; NumericalConstraintPtr_t &gt;</type>
      <name>NumericalConstraints_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a9cacffc969c8a64c6e0df0df903ab53a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; GripperPtr_t, HandlePtr_t &gt;</type>
      <name>Grasp_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a67c5d401beeaed1bcff5145efc085293</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Grasp_t &gt;</type>
      <name>GraspPtr_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a7a34f9feb11f5bb2e3c41f6a53dd99f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; NumericalConstraintPtr_t, GraspPtr_t &gt;</type>
      <name>GraspsMap_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ad3a279f3e18a786b8e57a88361917caa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; core::vector3_t &gt;</type>
      <name>Shape_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a934372c499338274e49da83c318016cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; JointPtr_t, Shape_t &gt;</type>
      <name>JointAndShape_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a898a66f15f9c304a4448c4398b46c825</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; JointAndShape_t &gt;</type>
      <name>JointAndShapes_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a4828846d9c914bf6bb05b8c80a5a7b9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; std::string &gt;</type>
      <name>StringList_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a8cccc2c73f80a309b4eb35824c05984e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HPP_MANIPULATION_DEPRECATED Shape_t</type>
      <name>Triangle</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a3a4b09cb5230750f8ea302b4980797ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HPP_MANIPULATION_DEPRECATED JointAndShape_t</type>
      <name>JointAndTriangle_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a1784f506eeceddbc9ead32b29b5356d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HPP_MANIPULATION_DEPRECATED JointAndShapes_t</type>
      <name>JointAndTriangles_t</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a69ce36d45552e440af51ca30ffeb0245</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>af4699e4830401075367c8905798c0c0f</anchor>
      <arglist>(Device)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a69828fdc6347a6a64ede6faefe5675fb</anchor>
      <arglist>(AxialHandle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a2501eb4647dda7ee50714bca99bd46a2</anchor>
      <arglist>(Handle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a9e798463bb2770a7606de13815f9c489</anchor>
      <arglist>(Object)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a8de0acc9a402e5584de79595d31d256f</anchor>
      <arglist>(ProblemSolver)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ab0a488840c517e5b6ec45ef7044c72c7</anchor>
      <arglist>(Problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a42f3996e834f4c74e87e3f6cce12a895</anchor>
      <arglist>(Roadmap)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a8fc81d1898468dd479a2c8d11e6ddb01</anchor>
      <arglist>(RoadmapNode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>afb1d58021ff588ec2bb9446327424ea7</anchor>
      <arglist>(ConnectedComponent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a662d5d4e06314436f51f277f86a61b0c</anchor>
      <arglist>(WeighedDistance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a6ea0b209a0e13971d352a276bfc414f8</anchor>
      <arglist>(ManipulationPlanner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>ab5076cf1c1f42bea2d843d91b23b5196</anchor>
      <arglist>(GraphPathValidation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a29c03ec6f561219a696086681a24ab80</anchor>
      <arglist>(GraphSteeringMethod)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a3e1d04a56375b80dbc77768cabbe8100</anchor>
      <arglist>(GraphOptimizer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>acae5af5babe429a887c70aa30ddbe4d5</anchor>
      <arglist>(GraphNodeOptimizer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>a753c71e72904db352d7dbf5bcbdc452e</anchor>
      <arglist>(ConstraintSet)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00068.html</anchorfile>
      <anchor>aadf512ba33cbe149b0b4823dd674c4ad</anchor>
      <arglist>(std::ostream &amp;os, const Handle &amp;handle)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::manipulation::graph</name>
    <filename>a00069.html</filename>
    <namespace>hpp::manipulation::graph::dot</namespace>
    <namespace>hpp::manipulation::graph::helper</namespace>
    <class kind="class">hpp::manipulation::graph::Cache</class>
    <class kind="class">hpp::manipulation::graph::Edge</class>
    <class kind="class">hpp::manipulation::graph::Foliation</class>
    <class kind="class">hpp::manipulation::graph::Graph</class>
    <class kind="class">hpp::manipulation::graph::GraphComponent</class>
    <class kind="class">hpp::manipulation::graph::GuidedNodeSelector</class>
    <class kind="class">hpp::manipulation::graph::Histogram</class>
    <class kind="class">hpp::manipulation::graph::LeafBin</class>
    <class kind="class">hpp::manipulation::graph::LeafHistogram</class>
    <class kind="class">hpp::manipulation::graph::LevelSetEdge</class>
    <class kind="class">hpp::manipulation::graph::Node</class>
    <class kind="class">hpp::manipulation::graph::NodeBin</class>
    <class kind="class">hpp::manipulation::graph::NodeHistogram</class>
    <class kind="class">hpp::manipulation::graph::NodeSelector</class>
    <class kind="class">hpp::manipulation::graph::WaypointEdge</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Graph &gt;</type>
      <name>GraphPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a257c3360cdfb57cbd0ef0737d83cac6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Node &gt;</type>
      <name>NodePtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a6ebe66d313d1e16d116ce13a01b00d1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Edge &gt;</type>
      <name>EdgePtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a77db730f566f1145010038dc24ccc28f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; WaypointEdge &gt;</type>
      <name>WaypointEdgePtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>ad86dfdc7bb030250836cb12e5f6535b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; LevelSetEdge &gt;</type>
      <name>LevelSetEdgePtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a1cc611aca73322cebcfd33bb268fa851</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; NodeSelector &gt;</type>
      <name>NodeSelectorPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a191baca9df5e148bd5d73ffed81c5b6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GuidedNodeSelector &gt;</type>
      <name>GuidedNodeSelectorPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a8b60a02ae9eea238dd29322f189cf68c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; GraphComponent &gt;</type>
      <name>GraphComponentPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>ae3026579f1a2d453a718d0d9c05c66ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; NodePtr_t &gt;</type>
      <name>Nodes_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a0574ffae3e378053e8ca72f5de62f34b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; EdgePtr_t &gt;</type>
      <name>Edges_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a3d2d73780ca32e3d43a675baef077d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::hpp::statistics::DiscreteDistribution&lt; EdgePtr_t &gt;::Weight_t</type>
      <name>Weight_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a947f707f7974f48a233f1a712d2efd2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>::hpp::statistics::DiscreteDistribution&lt; EdgePtr_t &gt;</type>
      <name>Neighbors_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>ad891d4c3c9017e903ec0d1a0fa4f5b17</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; NodeSelectorPtr_t &gt;</type>
      <name>NodeSelectors_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a48894cedddbeb769db212e741d647935</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::Constraint</type>
      <name>Constraint</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>aeb1c0cb9a3bae3a09de85c77d45dadfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::ConstraintPtr_t</type>
      <name>ConstraintPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>ade9188f5fea9cdbf98f62d0438b05668</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::LockedJoint</type>
      <name>LockedJoint</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a101f7545dd1fde676ddc530cf4453d2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::LockedJointPtr_t</type>
      <name>LockedJointPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a18105e39c72e4ad7cd933b7922807991</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::ConfigProjector</type>
      <name>ConfigProjector</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a271c1ffb90d415c99d0cad385b328325</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::ConfigProjectorPtr_t</type>
      <name>ConfigProjectorPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a0b892c71cc7fc018eacb60a3d1933540</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::Equality</type>
      <name>Equality</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a6838c655e43ec021ab37b6ef220d2852</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::ComparisonTypePtr_t</type>
      <name>ComparisonTypePtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a059fd5f185affd6d979ffbd4a16b6671</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::DifferentiableFunctionPtr_t</type>
      <name>DifferentiableFunctionPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a2968dc36e9e925b7bae4dc154695068c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::SizeIntervals_t</type>
      <name>SizeIntervals_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a3ccef3b9a88a31968a647e045869edbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; SizeIntervals_t &gt;</type>
      <name>IntervalsContainer_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>ae9b6f9248487756a611bf33bbc2fbf0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::NumericalConstraints_t</type>
      <name>NumericalConstraints_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a0cec6bc1d90a0442cc2b151f5d550a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hpp::core::LockedJoints_t</type>
      <name>LockedJoints_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a964f21f1e2ae8ce3b0832ed2fb42f9ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; Histogram &gt;</type>
      <name>HistogramPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a6fd2e0379a89f5a7210cde5e963819ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; NodeHistogram &gt;</type>
      <name>NodeHistogramPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>af09e964735fb9dd6796bc4b663f96960</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; LeafHistogram &gt;</type>
      <name>LeafHistogramPtr_t</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a1f6d90fd4d05abfa738c42cf597e61d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a809fc7b720a5165b42538624f785fb55</anchor>
      <arglist>(Graph)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a20bb11dfd9af9a3ea470e138f7dd5ee9</anchor>
      <arglist>(Node)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>abbd93f93a2c484f6cb4c2f2ddef1ee6d</anchor>
      <arglist>(Edge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a1816e3003adaa327c9221f2ffb45f829</anchor>
      <arglist>(WaypointEdge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a49ba99ccaf2e8567a15d296ce0dce78a</anchor>
      <arglist>(LevelSetEdge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>ad5c62fff5424b0795e7e9b213acd5337</anchor>
      <arglist>(NodeSelector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>ac9066ba76ad50feca8f2f37ac1596616</anchor>
      <arglist>(GuidedNodeSelector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>a553ef2c3a861a8628b2e6ea4e6de2527</anchor>
      <arglist>(GraphComponent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_MAKE_EXCEPTION</name>
      <anchorfile>a00069.html</anchorfile>
      <anchor>aa0601a4def88d5f7d289a439a06967db</anchor>
      <arglist>(HPP_MANIPULATION_DLLAPI, Bad_function_call)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>ga78dea138fa29161df8601cf75cdce66f</anchor>
      <arglist>(std::ostream &amp;os, const GraphComponent &amp;graphComp)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::manipulation::graph::dot</name>
    <filename>a00070.html</filename>
    <class kind="struct">hpp::manipulation::graph::dot::DrawingAttributes</class>
    <class kind="struct">hpp::manipulation::graph::dot::Tooltip</class>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>insertComments</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a88158dbb5ae7e9b30d2c87747f9a023d</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00070.html</anchorfile>
      <anchor>a6c930bffec5bfa6b1490e243c6de5744</anchor>
      <arglist>(std::ostream &amp;os, const DrawingAttributes &amp;da)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::manipulation::graph::helper</name>
    <filename>a00071.html</filename>
    <class kind="struct">hpp::manipulation::graph::helper::FoliatedManifold</class>
    <class kind="struct">hpp::manipulation::graph::helper::NumericalConstraintsAndPassiveDofs</class>
    <class kind="struct">hpp::manipulation::graph::helper::ObjectDef_t</class>
    <member kind="typedef">
      <type>boost::tuple&lt; NumericalConstraintPtr_t, NumericalConstraintPtr_t, LockedJoints_t &gt;</type>
      <name>PlacementConstraint_t</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga6afc11a6b568c927a90391bb9dd55488</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; HandlePtr_t &gt;</type>
      <name>Handles_t</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga55c2291d9ab4f12153077dae8139f584</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; GripperPtr_t &gt;</type>
      <name>Grippers_t</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gacb22f07ba9e56b4ac19caca53f4210b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::tuple&lt; PlacementConstraint_t, Handles_t &gt;</type>
      <name>Object_t</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga965de7e3f02fac9f609abe039b77ca28</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Object_t &gt;</type>
      <name>Objects_t</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga762238bdac56082281461e3bd90b797b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GraspingCase</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gac90bb5d288151a336e55106c7a10023f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoGrasp</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fa9c34b5fd3c9e3502bedab4d57817504f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GraspOnly</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fa51b2d0534ecf569c08cc969997990590</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WithPreGrasp</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fac13fb09f8eee1b95978decceaa88dc83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlacementCase</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gabf7d2d056c919423d6ddc30c2216a3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoPlace</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1a018c646c44b4380f51af97e5673932ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PlaceOnly</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1a3486c8460f482c55a2f68bc1ac7fc8c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WithPrePlace</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1ab4dcacb6faa315def204d72abed90ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Edges_t</type>
      <name>createEdges</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga044ed13a1957239663a0344e048958a8</anchor>
      <arglist>(const std::string &amp;forwName, const std::string &amp;backName, const NodePtr_t &amp;from, const NodePtr_t &amp;to, const size_type &amp;wForw, const size_type &amp;wBack, const FoliatedManifold &amp;grasp, const FoliatedManifold &amp;pregrasp, const FoliatedManifold &amp;place, const FoliatedManifold &amp;preplace, const bool levelSetGrasp, const bool levelSetPlace, const FoliatedManifold &amp;submanifoldDef=FoliatedManifold())</arglist>
    </member>
    <member kind="function">
      <type>EdgePtr_t</type>
      <name>createLoopEdge</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga4537715cd521ece545420556100b4b25</anchor>
      <arglist>(const std::string &amp;loopName, const NodePtr_t &amp;node, const size_type &amp;w, const bool levelSet, const FoliatedManifold &amp;submanifoldDef=FoliatedManifold())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graspManifold</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gaffa0005f5fe2ec45f29806dd0ff6e58f</anchor>
      <arglist>(const GripperPtr_t &amp;gripper, const HandlePtr_t &amp;handle, FoliatedManifold &amp;grasp, FoliatedManifold &amp;pregrasp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>strictPlacementManifold</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gaca0da4b24edb04164633c1e79b17cb4f</anchor>
      <arglist>(const NumericalConstraintPtr_t placement, const NumericalConstraintPtr_t preplacement, const NumericalConstraintPtr_t placementComplement, FoliatedManifold &amp;place, FoliatedManifold &amp;preplace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>relaxedPlacementManifold</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gaad40080ba6630b90f449a77ba7f53b12</anchor>
      <arglist>(const NumericalConstraintPtr_t placement, const NumericalConstraintPtr_t preplacement, const LockedJoints_t objectLocks, FoliatedManifold &amp;place, FoliatedManifold &amp;preplace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graphBuilder</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gabdbf8a34c9ae79b39856ac6538391b3d</anchor>
      <arglist>(const Objects_t &amp;objects, const Grippers_t &amp;grippers, GraphPtr_t graph)</arglist>
    </member>
    <member kind="function">
      <type>GraphPtr_t</type>
      <name>graphBuilder</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga2db336cf8e6102504f78c353ca51a89c</anchor>
      <arglist>(const ProblemSolverPtr_t &amp;ps, const std::string &amp;graphName, const StringList_t &amp;griNames, const std::list&lt; ObjectDef_t &gt; &amp;objs, const StringList_t &amp;envNames, const value_type &amp;prePlaceWidth=0.05)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>hpp::manipulation::pathOptimization</name>
    <filename>a00072.html</filename>
    <class kind="struct">hpp::manipulation::pathOptimization::ConfigOptimizationTraits</class>
    <class kind="class">hpp::manipulation::pathOptimization::SmallSteps</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; SmallSteps &gt;</type>
      <name>SmallStepsPtr_t</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a60604613f6178214b820fa687c0b36d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>a9bcb36b9db6a66f0a4ef9b7d63bd42ac</anchor>
      <arglist>(SmallSteps)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>constraint_graph</name>
    <title>Constraint Graph</title>
    <filename>a00074.html</filename>
    <class kind="class">hpp::manipulation::graph::Edge</class>
    <class kind="class">hpp::manipulation::graph::WaypointEdge</class>
    <class kind="class">hpp::manipulation::graph::LevelSetEdge</class>
    <class kind="class">hpp::manipulation::graph::GraphComponent</class>
    <class kind="class">hpp::manipulation::graph::Graph</class>
    <class kind="class">hpp::manipulation::graph::Node</class>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00074.html</anchorfile>
      <anchor>ga78dea138fa29161df8601cf75cdce66f</anchor>
      <arglist>(std::ostream &amp;os, const GraphComponent &amp;graphComp)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Constraints</name>
    <title>Constraints</title>
    <filename>a00075.html</filename>
    <class kind="class">hpp::manipulation::ConstraintSet</class>
    <member kind="typedef">
      <type>GenericTransformation&lt; PositionBit|OrientationBit &gt;</type>
      <name>Transformation2</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>gaa150d4ab5c8f3858772af332f3d4ba79</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericTransformation&lt; PositionBit &gt;</type>
      <name>Position2</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ga298f3bce23cfd4b26908a780f6d54bc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericTransformation&lt; OrientationBit &gt;</type>
      <name>Orientation2</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ga7a6a28aa4fd89aa0eeb7b7fc79eae66b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericTransformation&lt; RelativeBit|PositionBit|OrientationBit &gt;</type>
      <name>RelativeTransformation2</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>gab4b0536c297c0603f0e53e451e80c8f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericTransformation&lt; RelativeBit|PositionBit &gt;</type>
      <name>RelativePosition2</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ga0af548908917b580d64f1deca42ca5de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericTransformation&lt; RelativeBit|OrientationBit &gt;</type>
      <name>RelativeOrientation2</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ga80bfc99b3d0a24672ad3d20e270255c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Inequality&lt; ComparisonType::Superior &gt;</type>
      <name>SuperiorIneq</name>
      <anchorfile>a00176.html</anchorfile>
      <anchor>ga07ff2078ca5d2e762bfe31c1207cc7a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Inequality&lt; ComparisonType::Inferior &gt;</type>
      <name>InferiorIneq</name>
      <anchorfile>a00176.html</anchorfile>
      <anchor>gaaaf8442127c6ec24c54c43b4ec9d125f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; SuperiorIneq &gt;</type>
      <name>SuperiorPtr_t</name>
      <anchorfile>a00176.html</anchorfile>
      <anchor>gaccaf36101f017c928100815751d4ba5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; InferiorIneq &gt;</type>
      <name>InferiorPtr_t</name>
      <anchorfile>a00176.html</anchorfile>
      <anchor>gaf3261ebb78e0323141ab1c544a844020</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericTransformation&lt; PositionBit|OrientationBit &gt;</type>
      <name>Transformation2</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>gaa150d4ab5c8f3858772af332f3d4ba79</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericTransformation&lt; PositionBit &gt;</type>
      <name>Position2</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ga298f3bce23cfd4b26908a780f6d54bc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericTransformation&lt; OrientationBit &gt;</type>
      <name>Orientation2</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ga7a6a28aa4fd89aa0eeb7b7fc79eae66b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericTransformation&lt; RelativeBit|PositionBit|OrientationBit &gt;</type>
      <name>RelativeTransformation2</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>gab4b0536c297c0603f0e53e451e80c8f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericTransformation&lt; RelativeBit|PositionBit &gt;</type>
      <name>RelativePosition2</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ga0af548908917b580d64f1deca42ca5de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GenericTransformation&lt; RelativeBit|OrientationBit &gt;</type>
      <name>RelativeOrientation2</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ga80bfc99b3d0a24672ad3d20e270255c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00072.html</anchorfile>
      <anchor>ga962ff736acd3e22ec80fd5c21a729c26</anchor>
      <arglist>(std::ostream &amp;os, const DifferentiableFunction &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00176.html</anchorfile>
      <anchor>gac19b1e5c7ce1ad90ee52aa3491bd2e9f</anchor>
      <arglist>(std::ostream &amp;os, const Constraint &amp;constraint)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>helper</name>
    <title>Helpers to build the graph of constraints</title>
    <filename>a00076.html</filename>
    <class kind="struct">hpp::manipulation::graph::helper::NumericalConstraintsAndPassiveDofs</class>
    <class kind="struct">hpp::manipulation::graph::helper::FoliatedManifold</class>
    <class kind="struct">hpp::manipulation::graph::helper::ObjectDef_t</class>
    <member kind="typedef">
      <type>boost::tuple&lt; NumericalConstraintPtr_t, NumericalConstraintPtr_t, LockedJoints_t &gt;</type>
      <name>PlacementConstraint_t</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga6afc11a6b568c927a90391bb9dd55488</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; HandlePtr_t &gt;</type>
      <name>Handles_t</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga55c2291d9ab4f12153077dae8139f584</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; GripperPtr_t &gt;</type>
      <name>Grippers_t</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gacb22f07ba9e56b4ac19caca53f4210b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::tuple&lt; PlacementConstraint_t, Handles_t &gt;</type>
      <name>Object_t</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga965de7e3f02fac9f609abe039b77ca28</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Object_t &gt;</type>
      <name>Objects_t</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga762238bdac56082281461e3bd90b797b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>GraspingCase</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gac90bb5d288151a336e55106c7a10023f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoGrasp</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fa9c34b5fd3c9e3502bedab4d57817504f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GraspOnly</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fa51b2d0534ecf569c08cc969997990590</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WithPreGrasp</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggac90bb5d288151a336e55106c7a10023fac13fb09f8eee1b95978decceaa88dc83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PlacementCase</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gabf7d2d056c919423d6ddc30c2216a3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoPlace</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1a018c646c44b4380f51af97e5673932ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PlaceOnly</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1a3486c8460f482c55a2f68bc1ac7fc8c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WithPrePlace</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ggabf7d2d056c919423d6ddc30c2216a3a1ab4dcacb6faa315def204d72abed90ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Edges_t</type>
      <name>createEdges</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga044ed13a1957239663a0344e048958a8</anchor>
      <arglist>(const std::string &amp;forwName, const std::string &amp;backName, const NodePtr_t &amp;from, const NodePtr_t &amp;to, const size_type &amp;wForw, const size_type &amp;wBack, const FoliatedManifold &amp;grasp, const FoliatedManifold &amp;pregrasp, const FoliatedManifold &amp;place, const FoliatedManifold &amp;preplace, const bool levelSetGrasp, const bool levelSetPlace, const FoliatedManifold &amp;submanifoldDef=FoliatedManifold())</arglist>
    </member>
    <member kind="function">
      <type>EdgePtr_t</type>
      <name>createLoopEdge</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga4537715cd521ece545420556100b4b25</anchor>
      <arglist>(const std::string &amp;loopName, const NodePtr_t &amp;node, const size_type &amp;w, const bool levelSet, const FoliatedManifold &amp;submanifoldDef=FoliatedManifold())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graspManifold</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gaffa0005f5fe2ec45f29806dd0ff6e58f</anchor>
      <arglist>(const GripperPtr_t &amp;gripper, const HandlePtr_t &amp;handle, FoliatedManifold &amp;grasp, FoliatedManifold &amp;pregrasp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>strictPlacementManifold</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gaca0da4b24edb04164633c1e79b17cb4f</anchor>
      <arglist>(const NumericalConstraintPtr_t placement, const NumericalConstraintPtr_t preplacement, const NumericalConstraintPtr_t placementComplement, FoliatedManifold &amp;place, FoliatedManifold &amp;preplace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>relaxedPlacementManifold</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gaad40080ba6630b90f449a77ba7f53b12</anchor>
      <arglist>(const NumericalConstraintPtr_t placement, const NumericalConstraintPtr_t preplacement, const LockedJoints_t objectLocks, FoliatedManifold &amp;place, FoliatedManifold &amp;preplace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graphBuilder</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>gabdbf8a34c9ae79b39856ac6538391b3d</anchor>
      <arglist>(const Objects_t &amp;objects, const Grippers_t &amp;grippers, GraphPtr_t graph)</arglist>
    </member>
    <member kind="function">
      <type>GraphPtr_t</type>
      <name>graphBuilder</name>
      <anchorfile>a00076.html</anchorfile>
      <anchor>ga2db336cf8e6102504f78c353ca51a89c</anchor>
      <arglist>(const ProblemSolverPtr_t &amp;ps, const std::string &amp;graphName, const StringList_t &amp;griNames, const std::list&lt; ObjectDef_t &gt; &amp;objs, const StringList_t &amp;envNames, const value_type &amp;prePlaceWidth=0.05)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Path_optimization</name>
    <title>Path Optimization</title>
    <filename>a00077.html</filename>
    <class kind="class">hpp::manipulation::GraphNodeOptimizer</class>
    <class kind="class">hpp::manipulation::GraphOptimizer</class>
    <class kind="struct">hpp::manipulation::pathOptimization::ConfigOptimizationTraits</class>
    <class kind="class">hpp::manipulation::pathOptimization::SmallSteps</class>
    <member kind="typedef">
      <type>std::vector&lt; CollisionConstraintsResult &gt;</type>
      <name>CollisionConstraintsResults_t</name>
      <anchorfile>a00172.html</anchorfile>
      <anchor>ga8ec3de1032309ec7c79adf9edfc48c99</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GradientBasedPtr_t</type>
      <name>create</name>
      <anchorfile>a00172.html</anchorfile>
      <anchor>ga3395c68307cad504abcf8cac8ea725fa</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PathVectorPtr_t</type>
      <name>optimize</name>
      <anchorfile>a00172.html</anchorfile>
      <anchor>ga333c9ed253e1901223f3ab95ce2bc970</anchor>
      <arglist>(const PathVectorPtr_t &amp;path)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GradientBased</name>
      <anchorfile>a00172.html</anchorfile>
      <anchor>ga53fdf87420e173ddc6ddee85a4f2eaf9</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
    <member kind="function">
      <type>const Problem &amp;</type>
      <name>problem</name>
      <anchorfile>a00172.html</anchorfile>
      <anchor>ga9d07d63edbc71df565164e70cb807057</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>interrupt</name>
      <anchorfile>a00172.html</anchorfile>
      <anchor>ga945c65ca497efd7c4098cd99dd26c413</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PathOptimizer</name>
      <anchorfile>a00172.html</anchorfile>
      <anchor>ga1dbe27ed7b7e7706778be064443061e1</anchor>
      <arglist>(const Problem &amp;problem)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>PathPtr_t</type>
      <name>steer</name>
      <anchorfile>a00172.html</anchorfile>
      <anchor>ga1fe4d818491c40aa735dbdafab2353e9</anchor>
      <arglist>(ConfigurationIn_t q1, ConfigurationIn_t q2) const </arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>interrupt_</name>
      <anchorfile>a00172.html</anchorfile>
      <anchor>ga8ada4f7cabc118faaac5d3f48ac4c56e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Validation</name>
    <title>Validation of configurations and paths</title>
    <filename>a00078.html</filename>
    <class kind="class">hpp::manipulation::GraphPathValidation</class>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; BodyPairCollision &gt;</type>
      <name>BodyPairCollisionPtr_t</name>
      <anchorfile>a00174.html</anchorfile>
      <anchor>gacb1c39e153c6655e0cae887b7fd1ab2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; BodyPairCollisionPtr_t &gt;</type>
      <name>BodyPairCollisions_t</name>
      <anchorfile>a00174.html</anchorfile>
      <anchor>ga4c266add883459e283d131572adf7508</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>boost::shared_ptr&lt; BodyPairCollision &gt;</type>
      <name>BodyPairCollisionPtr_t</name>
      <anchorfile>a00174.html</anchorfile>
      <anchor>ga843636fb56aef23255988af3ef7307a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::list&lt; BodyPairCollisionPtr_t &gt;</type>
      <name>BodyPairCollisions_t</name>
      <anchorfile>a00174.html</anchorfile>
      <anchor>ga8797a5012167ca526851c2f07b1bd476</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HPP_PREDEF_CLASS</name>
      <anchorfile>a00174.html</anchorfile>
      <anchor>gab13c9e4772035258ef0d4d83d36b1a8e</anchor>
      <arglist>(BodyPairCollision)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DichotomyPtr_t</type>
      <name>create</name>
      <anchorfile>a00174.html</anchorfile>
      <anchor>ga5f676eee8fa0cda5944dbfff2d3f092f</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const value_type &amp;tolerance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>validate</name>
      <anchorfile>a00174.html</anchorfile>
      <anchor>ga27f86ba34e4ca51b45ad6e207133309b</anchor>
      <arglist>(const PathPtr_t &amp;path, bool reverse, PathPtr_t &amp;validPart, PathValidationReportPtr_t &amp;report)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addObstacle</name>
      <anchorfile>a00174.html</anchorfile>
      <anchor>ga731cb9a6c113024bf96d2c9dd416a77a</anchor>
      <arglist>(const CollisionObjectPtr_t &amp;object)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeObstacleFromJoint</name>
      <anchorfile>a00174.html</anchorfile>
      <anchor>gabd70823f916058d63b3599b78e531bfc</anchor>
      <arglist>(const JointPtr_t &amp;joint, const CollisionObjectPtr_t &amp;obstacle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Dichotomy</name>
      <anchorfile>a00174.html</anchorfile>
      <anchor>ga08d4c7054f5eaaebe528dc1b10227f07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Dichotomy</name>
      <anchorfile>a00174.html</anchorfile>
      <anchor>ga0c4d868306a004e2c0793313c05c9a54</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const value_type &amp;tolerance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Progressive</name>
      <anchorfile>a00174.html</anchorfile>
      <anchor>ga6c21c71dc868957051aec0a80366abf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Progressive</name>
      <anchorfile>a00174.html</anchorfile>
      <anchor>ga79163ff13a693103d910897e9cc55e57</anchor>
      <arglist>(const DevicePtr_t &amp;robot, const value_type &amp;tolerance)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00174.html</anchorfile>
      <anchor>ga656195c66d722769e89c7a8af48181a2</anchor>
      <arglist>(std::ostream &amp;os, const ValidationReport &amp;report)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static GraphPathValidationPtr_t</type>
      <name>create</name>
      <anchorfile>a00078.html</anchorfile>
      <anchor>ga776d9be20d59a64760c0fe1ed93b54c9</anchor>
      <arglist>(const model::DevicePtr_t &amp;robot, const value_type &amp;stepSize)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Steering_method</name>
    <title>Steering method and distance functions</title>
    <filename>a00079.html</filename>
    <class kind="class">hpp::manipulation::GraphSteeringMethod</class>
    <class kind="class">hpp::manipulation::WeighedDistance</class>
    <member kind="function" static="yes">
      <type>static GraphSteeringMethodPtr_t</type>
      <name>create</name>
      <anchorfile>a00079.html</anchorfile>
      <anchor>gabaa7c5d6d4a62692820886f951812ae3</anchor>
      <arglist>(const core::ProblemPtr_t &amp;problem)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Path_planning</name>
    <title>Path planning algorithms</title>
    <filename>a00080.html</filename>
    <class kind="class">hpp::manipulation::ManipulationPlanner</class>
    <class kind="class">hpp::manipulation::Problem</class>
  </compound>
  <compound kind="group">
    <name>Roadmap</name>
    <title>Roadmap</title>
    <filename>a00081.html</filename>
    <class kind="class">hpp::manipulation::Roadmap</class>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00175.html</anchorfile>
      <anchor>ga1947b6d9b37f1a315e596b194adc6159</anchor>
      <arglist>(std::ostream &amp;os, const Node &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>a00175.html</anchorfile>
      <anchor>ga8ae1800d63fa0035ab3281311e873193</anchor>
      <arglist>(std::ostream &amp;os, const Roadmap &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title></title>
    <filename>index</filename>
    <docanchor file="index" title="Introduction">sec_intro_hpp_manipulation</docanchor>
    <docanchor file="index" title="Constraint graph">sec_graph_hpp_manipulation</docanchor>
    <docanchor file="index" title="Manipulation planner">sec_solver_hpp_manipulation</docanchor>
    <docanchor file="index" title="Introduction">sec_intro_hpp_model</docanchor>
    <docanchor file="index" title="Main classes">sec_hpp_model_main_classes</docanchor>
    <docanchor file="index" title="Joints">subsec_hpp_model_joint</docanchor>
    <docanchor file="index" title="Joint configuration">hpp_model_joint_configuration</docanchor>
    <docanchor file="index" title="Device">subsec_hpp_model_device</docanchor>
    <docanchor file="index">Configuration</docanchor>
    <docanchor file="index">Velocity</docanchor>
    <docanchor file="index" title="Operations between configurations and velocities">hpp_model_operation_between_configurations_and_velocities</docanchor>
    <docanchor file="index" title="Introduction">hpp_core_sec_intro</docanchor>
    <docanchor file="index" title="Embedding hpp-core into an application">hpp_core_sec_embedding</docanchor>
    <docanchor file="index" title="Introduction">fcl_introduction</docanchor>
    <docanchor file="index" title="Using fcl">fcl_howto</docanchor>
  </compound>
</tagfile>
